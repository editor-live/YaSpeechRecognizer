// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/ai/stt/v3/stt.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Speechkit.Stt.V3 {

  /// <summary>Holder for reflection information generated from yandex/cloud/ai/stt/v3/stt.proto</summary>
  public static partial class SttReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/ai/stt/v3/stt.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SttReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiB5YW5kZXgvY2xvdWQvYWkvc3R0L3YzL3N0dC5wcm90bxIQc3BlZWNoa2l0",
            "LnN0dC52MyLiAwoYVGV4dE5vcm1hbGl6YXRpb25PcHRpb25zElgKEnRleHRf",
            "bm9ybWFsaXphdGlvbhgBIAEoDjI8LnNwZWVjaGtpdC5zdHQudjMuVGV4dE5v",
            "cm1hbGl6YXRpb25PcHRpb25zLlRleHROb3JtYWxpemF0aW9uEhgKEHByb2Zh",
            "bml0eV9maWx0ZXIYAiABKAgSFwoPbGl0ZXJhdHVyZV90ZXh0GAMgASgIEl0K",
            "FXBob25lX2Zvcm1hdHRpbmdfbW9kZRgEIAEoDjI+LnNwZWVjaGtpdC5zdHQu",
            "djMuVGV4dE5vcm1hbGl6YXRpb25PcHRpb25zLlBob25lRm9ybWF0dGluZ01v",
            "ZGUieAoRVGV4dE5vcm1hbGl6YXRpb24SIgoeVEVYVF9OT1JNQUxJWkFUSU9O",
            "X1VOU1BFQ0lGSUVEEAASHgoaVEVYVF9OT1JNQUxJWkFUSU9OX0VOQUJMRUQQ",
            "ARIfChtURVhUX05PUk1BTElaQVRJT05fRElTQUJMRUQQAiJgChNQaG9uZUZv",
            "cm1hdHRpbmdNb2RlEiUKIVBIT05FX0ZPUk1BVFRJTkdfTU9ERV9VTlNQRUNJ",
            "RklFRBAAEiIKHlBIT05FX0ZPUk1BVFRJTkdfTU9ERV9ESVNBQkxFRBABIs4B",
            "ChREZWZhdWx0RW91Q2xhc3NpZmllchJDCgR0eXBlGAEgASgOMjUuc3BlZWNo",
            "a2l0LnN0dC52My5EZWZhdWx0RW91Q2xhc3NpZmllci5Fb3VTZW5zaXRpdml0",
            "eRInCh9tYXhfcGF1c2VfYmV0d2Vlbl93b3Jkc19oaW50X21zGAIgASgDIkgK",
            "DkVvdVNlbnNpdGl2aXR5Eh8KG0VPVV9TRU5TSVRJVklUWV9VTlNQRUNJRklF",
            "RBAAEgsKB0RFRkFVTFQQARIICgRISUdIEAIiFwoVRXh0ZXJuYWxFb3VDbGFz",
            "c2lmaWVyIrIBChRFb3VDbGFzc2lmaWVyT3B0aW9ucxJEChJkZWZhdWx0X2Ns",
            "YXNzaWZpZXIYASABKAsyJi5zcGVlY2hraXQuc3R0LnYzLkRlZmF1bHRFb3VD",
            "bGFzc2lmaWVySAASRgoTZXh0ZXJuYWxfY2xhc3NpZmllchgCIAEoCzInLnNw",
            "ZWVjaGtpdC5zdHQudjMuRXh0ZXJuYWxFb3VDbGFzc2lmaWVySABCDAoKQ2xh",
            "c3NpZmllciLTAQoVUmVjb2duaXRpb25DbGFzc2lmaWVyEhIKCmNsYXNzaWZp",
            "ZXIYASABKAkSRQoIdHJpZ2dlcnMYAiADKA4yMy5zcGVlY2hraXQuc3R0LnYz",
            "LlJlY29nbml0aW9uQ2xhc3NpZmllci5UcmlnZ2VyVHlwZSJfCgtUcmlnZ2Vy",
            "VHlwZRIgChhUUklHR0VSX1RZUEVfVU5TUEVDSUZJRUQQABoCCAESEAoMT05f",
            "VVRURVJBTkNFEAESDAoIT05fRklOQUwQAhIOCgpPTl9QQVJUSUFMEAMiXAoc",
            "UmVjb2duaXRpb25DbGFzc2lmaWVyT3B0aW9ucxI8CgtjbGFzc2lmaWVycxgB",
            "IAMoCzInLnNwZWVjaGtpdC5zdHQudjMuUmVjb2duaXRpb25DbGFzc2lmaWVy",
            "IogBChVTcGVlY2hBbmFseXNpc09wdGlvbnMSHwoXZW5hYmxlX3NwZWFrZXJf",
            "YW5hbHlzaXMYASABKAgSJAocZW5hYmxlX2NvbnZlcnNhdGlvbl9hbmFseXNp",
            "cxgCIAEoCBIoCiBkZXNjcmlwdGl2ZV9zdGF0aXN0aWNzX3F1YW50aWxlcxgD",
            "IAMoASLHAQoIUmF3QXVkaW8SQAoOYXVkaW9fZW5jb2RpbmcYASABKA4yKC5z",
            "cGVlY2hraXQuc3R0LnYzLlJhd0F1ZGlvLkF1ZGlvRW5jb2RpbmcSGQoRc2Ft",
            "cGxlX3JhdGVfaGVydHoYAiABKAMSGwoTYXVkaW9fY2hhbm5lbF9jb3VudBgD",
            "IAEoAyJBCg1BdWRpb0VuY29kaW5nEh4KGkFVRElPX0VOQ09ESU5HX1VOU1BF",
            "Q0lGSUVEEAASEAoMTElORUFSMTZfUENNEAEivwEKDkNvbnRhaW5lckF1ZGlv",
            "ElEKFGNvbnRhaW5lcl9hdWRpb190eXBlGAEgASgOMjMuc3BlZWNoa2l0LnN0",
            "dC52My5Db250YWluZXJBdWRpby5Db250YWluZXJBdWRpb1R5cGUiWgoSQ29u",
            "dGFpbmVyQXVkaW9UeXBlEiQKIENPTlRBSU5FUl9BVURJT19UWVBFX1VOU1BF",
            "Q0lGSUVEEAASBwoDV0FWEAESDAoIT0dHX09QVVMQAhIHCgNNUDMQAyKRAQoS",
            "QXVkaW9Gb3JtYXRPcHRpb25zEi8KCXJhd19hdWRpbxgBIAEoCzIaLnNwZWVj",
            "aGtpdC5zdHQudjMuUmF3QXVkaW9IABI7Cg9jb250YWluZXJfYXVkaW8YAiAB",
            "KAsyIC5zcGVlY2hraXQuc3R0LnYzLkNvbnRhaW5lckF1ZGlvSABCDQoLQXVk",
            "aW9Gb3JtYXQi9wEKGkxhbmd1YWdlUmVzdHJpY3Rpb25PcHRpb25zEl4KEHJl",
            "c3RyaWN0aW9uX3R5cGUYASABKA4yRC5zcGVlY2hraXQuc3R0LnYzLkxhbmd1",
            "YWdlUmVzdHJpY3Rpb25PcHRpb25zLkxhbmd1YWdlUmVzdHJpY3Rpb25UeXBl",
            "EhUKDWxhbmd1YWdlX2NvZGUYAiADKAkiYgoXTGFuZ3VhZ2VSZXN0cmljdGlv",
            "blR5cGUSKQolTEFOR1VBR0VfUkVTVFJJQ1RJT05fVFlQRV9VTlNQRUNJRklF",
            "RBAAEg0KCVdISVRFTElTVBABEg0KCUJMQUNLTElTVBACIrIDChdSZWNvZ25p",
            "dGlvbk1vZGVsT3B0aW9ucxINCgVtb2RlbBgBIAEoCRI6CgxhdWRpb19mb3Jt",
            "YXQYAiABKAsyJC5zcGVlY2hraXQuc3R0LnYzLkF1ZGlvRm9ybWF0T3B0aW9u",
            "cxJGChJ0ZXh0X25vcm1hbGl6YXRpb24YAyABKAsyKi5zcGVlY2hraXQuc3R0",
            "LnYzLlRleHROb3JtYWxpemF0aW9uT3B0aW9ucxJKChRsYW5ndWFnZV9yZXN0",
            "cmljdGlvbhgEIAEoCzIsLnNwZWVjaGtpdC5zdHQudjMuTGFuZ3VhZ2VSZXN0",
            "cmljdGlvbk9wdGlvbnMSXAoVYXVkaW9fcHJvY2Vzc2luZ190eXBlGAUgASgO",
            "Mj0uc3BlZWNoa2l0LnN0dC52My5SZWNvZ25pdGlvbk1vZGVsT3B0aW9ucy5B",
            "dWRpb1Byb2Nlc3NpbmdUeXBlIloKE0F1ZGlvUHJvY2Vzc2luZ1R5cGUSJQoh",
            "QVVESU9fUFJPQ0VTU0lOR19UWVBFX1VOU1BFQ0lGSUVEEAASDQoJUkVBTF9U",
            "SU1FEAESDQoJRlVMTF9EQVRBEAIi3gEKFlNwZWFrZXJMYWJlbGluZ09wdGlv",
            "bnMSUgoQc3BlYWtlcl9sYWJlbGluZxgBIAEoDjI4LnNwZWVjaGtpdC5zdHQu",
            "djMuU3BlYWtlckxhYmVsaW5nT3B0aW9ucy5TcGVha2VyTGFiZWxpbmcicAoP",
            "U3BlYWtlckxhYmVsaW5nEiAKHFNQRUFLRVJfTEFCRUxJTkdfVU5TUEVDSUZJ",
            "RUQQABIcChhTUEVBS0VSX0xBQkVMSU5HX0VOQUJMRUQQARIdChlTUEVBS0VS",
            "X0xBQkVMSU5HX0RJU0FCTEVEEAIi7gIKEFN0cmVhbWluZ09wdGlvbnMSRAoR",
            "cmVjb2duaXRpb25fbW9kZWwYASABKAsyKS5zcGVlY2hraXQuc3R0LnYzLlJl",
            "Y29nbml0aW9uTW9kZWxPcHRpb25zEj4KDmVvdV9jbGFzc2lmaWVyGAIgASgL",
            "MiYuc3BlZWNoa2l0LnN0dC52My5Fb3VDbGFzc2lmaWVyT3B0aW9ucxJOChZy",
            "ZWNvZ25pdGlvbl9jbGFzc2lmaWVyGAMgASgLMi4uc3BlZWNoa2l0LnN0dC52",
            "My5SZWNvZ25pdGlvbkNsYXNzaWZpZXJPcHRpb25zEkAKD3NwZWVjaF9hbmFs",
            "eXNpcxgEIAEoCzInLnNwZWVjaGtpdC5zdHQudjMuU3BlZWNoQW5hbHlzaXNP",
            "cHRpb25zEkIKEHNwZWFrZXJfbGFiZWxpbmcYBSABKAsyKC5zcGVlY2hraXQu",
            "c3R0LnYzLlNwZWFrZXJMYWJlbGluZ09wdGlvbnMiGgoKQXVkaW9DaHVuaxIM",
            "CgRkYXRhGAEgASgMIiMKDFNpbGVuY2VDaHVuaxITCgtkdXJhdGlvbl9tcxgB",
            "IAEoAyIFCgNFb3Ui6AEKEFN0cmVhbWluZ1JlcXVlc3QSPQoPc2Vzc2lvbl9v",
            "cHRpb25zGAEgASgLMiIuc3BlZWNoa2l0LnN0dC52My5TdHJlYW1pbmdPcHRp",
            "b25zSAASLQoFY2h1bmsYAiABKAsyHC5zcGVlY2hraXQuc3R0LnYzLkF1ZGlv",
            "Q2h1bmtIABI3Cg1zaWxlbmNlX2NodW5rGAMgASgLMh4uc3BlZWNoa2l0LnN0",
            "dC52My5TaWxlbmNlQ2h1bmtIABIkCgNlb3UYBCABKAsyFS5zcGVlY2hraXQu",
            "c3R0LnYzLkVvdUgAQgcKBUV2ZW50Ip8CChRSZWNvZ25pemVGaWxlUmVxdWVz",
            "dBIRCgdjb250ZW50GAEgASgMSAASDQoDdXJpGAIgASgJSAASRAoRcmVjb2du",
            "aXRpb25fbW9kZWwYAyABKAsyKS5zcGVlY2hraXQuc3R0LnYzLlJlY29nbml0",
            "aW9uTW9kZWxPcHRpb25zEk4KFnJlY29nbml0aW9uX2NsYXNzaWZpZXIYBCAB",
            "KAsyLi5zcGVlY2hraXQuc3R0LnYzLlJlY29nbml0aW9uQ2xhc3NpZmllck9w",
            "dGlvbnMSQAoPc3BlZWNoX2FuYWx5c2lzGAUgASgLMicuc3BlZWNoa2l0LnN0",
            "dC52My5TcGVlY2hBbmFseXNpc09wdGlvbnNCDQoLQXVkaW9Tb3VyY2UiQAoE",
            "V29yZBIMCgR0ZXh0GAEgASgJEhUKDXN0YXJ0X3RpbWVfbXMYAiABKAMSEwoL",
            "ZW5kX3RpbWVfbXMYAyABKAMiQAoSTGFuZ3VhZ2VFc3RpbWF0aW9uEhUKDWxh",
            "bmd1YWdlX2NvZGUYASABKAkSEwoLcHJvYmFiaWxpdHkYAiABKAEiuwEKC0Fs",
            "dGVybmF0aXZlEiUKBXdvcmRzGAEgAygLMhYuc3BlZWNoa2l0LnN0dC52My5X",
            "b3JkEgwKBHRleHQYAiABKAkSFQoNc3RhcnRfdGltZV9tcxgDIAEoAxITCgtl",
            "bmRfdGltZV9tcxgEIAEoAxISCgpjb25maWRlbmNlGAUgASgBEjcKCWxhbmd1",
            "YWdlcxgGIAMoCzIkLnNwZWVjaGtpdC5zdHQudjMuTGFuZ3VhZ2VFc3RpbWF0",
            "aW9uIhwKCUVvdVVwZGF0ZRIPCgd0aW1lX21zGAIgASgDImEKEUFsdGVybmF0",
            "aXZlVXBkYXRlEjMKDGFsdGVybmF0aXZlcxgBIAMoCzIdLnNwZWVjaGtpdC5z",
            "dHQudjMuQWx0ZXJuYXRpdmUSFwoLY2hhbm5lbF90YWcYAiABKAlCAhgBIpkB",
            "CgxBdWRpb0N1cnNvcnMSGAoQcmVjZWl2ZWRfZGF0YV9tcxgBIAEoAxIVCg1y",
            "ZXNldF90aW1lX21zGAIgASgDEhcKD3BhcnRpYWxfdGltZV9tcxgDIAEoAxIV",
            "Cg1maW5hbF90aW1lX21zGAQgASgDEhMKC2ZpbmFsX2luZGV4GAUgASgDEhMK",
            "C2VvdV90aW1lX21zGAYgASgDIm4KD0ZpbmFsUmVmaW5lbWVudBITCgtmaW5h",
            "bF9pbmRleBgBIAEoAxI+Cg9ub3JtYWxpemVkX3RleHQYAiABKAsyIy5zcGVl",
            "Y2hraXQuc3R0LnYzLkFsdGVybmF0aXZlVXBkYXRlSABCBgoEVHlwZSJMCgpT",
            "dGF0dXNDb2RlEi0KCWNvZGVfdHlwZRgBIAEoDjIaLnNwZWVjaGtpdC5zdHQu",
            "djMuQ29kZVR5cGUSDwoHbWVzc2FnZRgCIAEoCSI0CgtTZXNzaW9uVXVpZBIM",
            "CgR1dWlkGAEgASgJEhcKD3VzZXJfcmVxdWVzdF9pZBgCIAEoCSJLCg9QaHJh",
            "c2VIaWdobGlnaHQSDAoEdGV4dBgBIAEoCRIVCg1zdGFydF90aW1lX21zGAIg",
            "ASgDEhMKC2VuZF90aW1lX21zGAMgASgDIj8KGlJlY29nbml0aW9uQ2xhc3Np",
            "ZmllckxhYmVsEg0KBWxhYmVsGAEgASgJEhIKCmNvbmZpZGVuY2UYAiABKAEi",
            "pgEKG1JlY29nbml0aW9uQ2xhc3NpZmllclJlc3VsdBISCgpjbGFzc2lmaWVy",
            "GAEgASgJEjUKCmhpZ2hsaWdodHMYAiADKAsyIS5zcGVlY2hraXQuc3R0LnYz",
            "LlBocmFzZUhpZ2hsaWdodBI8CgZsYWJlbHMYAyADKAsyLC5zcGVlY2hraXQu",
            "c3R0LnYzLlJlY29nbml0aW9uQ2xhc3NpZmllckxhYmVsIscCChtSZWNvZ25p",
            "dGlvbkNsYXNzaWZpZXJVcGRhdGUSTQoLd2luZG93X3R5cGUYASABKA4yOC5z",
            "cGVlY2hraXQuc3R0LnYzLlJlY29nbml0aW9uQ2xhc3NpZmllclVwZGF0ZS5X",
            "aW5kb3dUeXBlEhUKDXN0YXJ0X3RpbWVfbXMYAiABKAMSEwoLZW5kX3RpbWVf",
            "bXMYAyABKAMSSAoRY2xhc3NpZmllcl9yZXN1bHQYBCABKAsyLS5zcGVlY2hr",
            "aXQuc3R0LnYzLlJlY29nbml0aW9uQ2xhc3NpZmllclJlc3VsdCJjCgpXaW5k",
            "b3dUeXBlEh8KF1dJTkRPV19UWVBFX1VOU1BFQ0lGSUVEEAAaAggBEhIKDkxB",
            "U1RfVVRURVJBTkNFEAESDgoKTEFTVF9GSU5BTBACEhAKDExBU1RfUEFSVElB",
            "TBADIrsBChVEZXNjcmlwdGl2ZVN0YXRpc3RpY3MSCwoDbWluGAEgASgBEgsK",
            "A21heBgCIAEoARIMCgRtZWFuGAMgASgBEgsKA3N0ZBgEIAEoARJDCglxdWFu",
            "dGlsZXMYBSADKAsyMC5zcGVlY2hraXQuc3R0LnYzLkRlc2NyaXB0aXZlU3Rh",
            "dGlzdGljcy5RdWFudGlsZRooCghRdWFudGlsZRINCgVsZXZlbBgBIAEoARIN",
            "CgV2YWx1ZRgCIAEoASJEChZBdWRpb1NlZ21lbnRCb3VuZGFyaWVzEhUKDXN0",
            "YXJ0X3RpbWVfbXMYASABKAMSEwoLZW5kX3RpbWVfbXMYAiABKAMihwYKD1Nw",
            "ZWFrZXJBbmFseXNpcxITCgtzcGVha2VyX3RhZxgBIAEoCRJBCgt3aW5kb3df",
            "dHlwZRgCIAEoDjIsLnNwZWVjaGtpdC5zdHQudjMuU3BlYWtlckFuYWx5c2lz",
            "LldpbmRvd1R5cGUSQwoRc3BlZWNoX2JvdW5kYXJpZXMYAyABKAsyKC5zcGVl",
            "Y2hraXQuc3R0LnYzLkF1ZGlvU2VnbWVudEJvdW5kYXJpZXMSFwoPdG90YWxf",
            "c3BlZWNoX21zGAQgASgDEhQKDHNwZWVjaF9yYXRpbxgFIAEoARIYChB0b3Rh",
            "bF9zaWxlbmNlX21zGAYgASgDEhUKDXNpbGVuY2VfcmF0aW8YByABKAESEwoL",
            "d29yZHNfY291bnQYCCABKAMSFQoNbGV0dGVyc19jb3VudBgJIAEoAxJBChB3",
            "b3Jkc19wZXJfc2Vjb25kGAogASgLMicuc3BlZWNoa2l0LnN0dC52My5EZXNj",
            "cmlwdGl2ZVN0YXRpc3RpY3MSQwoSbGV0dGVyc19wZXJfc2Vjb25kGAsgASgL",
            "Micuc3BlZWNoa2l0LnN0dC52My5EZXNjcmlwdGl2ZVN0YXRpc3RpY3MSRAoT",
            "d29yZHNfcGVyX3V0dGVyYW5jZRgMIAEoCzInLnNwZWVjaGtpdC5zdHQudjMu",
            "RGVzY3JpcHRpdmVTdGF0aXN0aWNzEkYKFWxldHRlcnNfcGVyX3V0dGVyYW5j",
            "ZRgNIAEoCzInLnNwZWVjaGtpdC5zdHQudjMuRGVzY3JpcHRpdmVTdGF0aXN0",
            "aWNzEhcKD3V0dGVyYW5jZV9jb3VudBgOIAEoAxJOCh11dHRlcmFuY2VfZHVy",
            "YXRpb25fZXN0aW1hdGlvbhgPIAEoCzInLnNwZWVjaGtpdC5zdHQudjMuRGVz",
            "Y3JpcHRpdmVTdGF0aXN0aWNzIkwKCldpbmRvd1R5cGUSHwoXV0lORE9XX1RZ",
            "UEVfVU5TUEVDSUZJRUQQABoCCAESCQoFVE9UQUwQARISCg5MQVNUX1VUVEVS",
            "QU5DRRACIoUGChRDb252ZXJzYXRpb25BbmFseXNpcxJJChdjb252ZXJzYXRp",
            "b25fYm91bmRhcmllcxgBIAEoCzIoLnNwZWVjaGtpdC5zdHQudjMuQXVkaW9T",
            "ZWdtZW50Qm91bmRhcmllcxIuCiZ0b3RhbF9zaW11bHRhbmVvdXNfc2lsZW5j",
            "ZV9kdXJhdGlvbl9tcxgCIAEoAxIoCiB0b3RhbF9zaW11bHRhbmVvdXNfc2ls",
            "ZW5jZV9yYXRpbxgDIAEoARJZCihzaW11bHRhbmVvdXNfc2lsZW5jZV9kdXJh",
            "dGlvbl9lc3RpbWF0aW9uGAQgASgLMicuc3BlZWNoa2l0LnN0dC52My5EZXNj",
            "cmlwdGl2ZVN0YXRpc3RpY3MSLQoldG90YWxfc2ltdWx0YW5lb3VzX3NwZWVj",
            "aF9kdXJhdGlvbl9tcxgFIAEoAxInCh90b3RhbF9zaW11bHRhbmVvdXNfc3Bl",
            "ZWNoX3JhdGlvGAYgASgBElgKJ3NpbXVsdGFuZW91c19zcGVlY2hfZHVyYXRp",
            "b25fZXN0aW1hdGlvbhgHIAEoCzInLnNwZWVjaGtpdC5zdHQudjMuRGVzY3Jp",
            "cHRpdmVTdGF0aXN0aWNzElcKEnNwZWFrZXJfaW50ZXJydXB0cxgIIAMoCzI7",
            "LnNwZWVjaGtpdC5zdHQudjMuQ29udmVyc2F0aW9uQW5hbHlzaXMuSW50ZXJy",
            "dXB0c0V2YWx1YXRpb24SIAoYdG90YWxfc3BlZWNoX2R1cmF0aW9uX21zGAkg",
            "ASgDEhoKEnRvdGFsX3NwZWVjaF9yYXRpbxgKIAEoARqjAQoUSW50ZXJydXB0",
            "c0V2YWx1YXRpb24SEwoLc3BlYWtlcl90YWcYASABKAkSGAoQaW50ZXJydXB0",
            "c19jb3VudBgCIAEoAxIeChZpbnRlcnJ1cHRzX2R1cmF0aW9uX21zGAMgASgD",
            "EjwKCmludGVycnVwdHMYBCADKAsyKC5zcGVlY2hraXQuc3R0LnYzLkF1ZGlv",
            "U2VnbWVudEJvdW5kYXJpZXMipQUKEVN0cmVhbWluZ1Jlc3BvbnNlEjMKDHNl",
            "c3Npb25fdXVpZBgBIAEoCzIdLnNwZWVjaGtpdC5zdHQudjMuU2Vzc2lvblV1",
            "aWQSNQoNYXVkaW9fY3Vyc29ycxgCIAEoCzIeLnNwZWVjaGtpdC5zdHQudjMu",
            "QXVkaW9DdXJzb3JzEh0KFXJlc3BvbnNlX3dhbGxfdGltZV9tcxgDIAEoAxI2",
            "CgdwYXJ0aWFsGAQgASgLMiMuc3BlZWNoa2l0LnN0dC52My5BbHRlcm5hdGl2",
            "ZVVwZGF0ZUgAEjQKBWZpbmFsGAUgASgLMiMuc3BlZWNoa2l0LnN0dC52My5B",
            "bHRlcm5hdGl2ZVVwZGF0ZUgAEjEKCmVvdV91cGRhdGUYBiABKAsyGy5zcGVl",
            "Y2hraXQuc3R0LnYzLkVvdVVwZGF0ZUgAEj0KEGZpbmFsX3JlZmluZW1lbnQY",
            "ByABKAsyIS5zcGVlY2hraXQuc3R0LnYzLkZpbmFsUmVmaW5lbWVudEgAEjMK",
            "C3N0YXR1c19jb2RlGAggASgLMhwuc3BlZWNoa2l0LnN0dC52My5TdGF0dXND",
            "b2RlSAASSgoRY2xhc3NpZmllcl91cGRhdGUYCiABKAsyLS5zcGVlY2hraXQu",
            "c3R0LnYzLlJlY29nbml0aW9uQ2xhc3NpZmllclVwZGF0ZUgAEj0KEHNwZWFr",
            "ZXJfYW5hbHlzaXMYCyABKAsyIS5zcGVlY2hraXQuc3R0LnYzLlNwZWFrZXJB",
            "bmFseXNpc0gAEkcKFWNvbnZlcnNhdGlvbl9hbmFseXNpcxgMIAEoCzImLnNw",
            "ZWVjaGtpdC5zdHQudjMuQ29udmVyc2F0aW9uQW5hbHlzaXNIABITCgtjaGFu",
            "bmVsX3RhZxgJIAEoCUIHCgVFdmVudCpPCghDb2RlVHlwZRIdChVDT0RFX1RZ",
            "UEVfVU5TUEVDSUZJRUQQABoCCAESCwoHV09SS0lORxABEgsKB1dBUk5JTkcQ",
            "AhIKCgZDTE9TRUQQA0JcChp5YW5kZXguY2xvdWQuYXBpLmFpLnN0dC52M1o+",
            "Z2l0aHViLmNvbS95YW5kZXgtY2xvdWQvZ28tZ2VucHJvdG8veWFuZGV4L2Ns",
            "b3VkL2FpL3N0dC92MztzdHRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Speechkit.Stt.V3.CodeType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.TextNormalizationOptions), global::Speechkit.Stt.V3.TextNormalizationOptions.Parser, new[]{ "TextNormalization", "ProfanityFilter", "LiteratureText", "PhoneFormattingMode" }, null, new[]{ typeof(global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization), typeof(global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.DefaultEouClassifier), global::Speechkit.Stt.V3.DefaultEouClassifier.Parser, new[]{ "Type", "MaxPauseBetweenWordsHintMs" }, null, new[]{ typeof(global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.ExternalEouClassifier), global::Speechkit.Stt.V3.ExternalEouClassifier.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.EouClassifierOptions), global::Speechkit.Stt.V3.EouClassifierOptions.Parser, new[]{ "DefaultClassifier", "ExternalClassifier" }, new[]{ "Classifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.RecognitionClassifier), global::Speechkit.Stt.V3.RecognitionClassifier.Parser, new[]{ "Classifier", "Triggers" }, null, new[]{ typeof(global::Speechkit.Stt.V3.RecognitionClassifier.Types.TriggerType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.RecognitionClassifierOptions), global::Speechkit.Stt.V3.RecognitionClassifierOptions.Parser, new[]{ "Classifiers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.SpeechAnalysisOptions), global::Speechkit.Stt.V3.SpeechAnalysisOptions.Parser, new[]{ "EnableSpeakerAnalysis", "EnableConversationAnalysis", "DescriptiveStatisticsQuantiles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.RawAudio), global::Speechkit.Stt.V3.RawAudio.Parser, new[]{ "AudioEncoding", "SampleRateHertz", "AudioChannelCount" }, null, new[]{ typeof(global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.ContainerAudio), global::Speechkit.Stt.V3.ContainerAudio.Parser, new[]{ "ContainerAudioType" }, null, new[]{ typeof(global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.AudioFormatOptions), global::Speechkit.Stt.V3.AudioFormatOptions.Parser, new[]{ "RawAudio", "ContainerAudio" }, new[]{ "AudioFormat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.LanguageRestrictionOptions), global::Speechkit.Stt.V3.LanguageRestrictionOptions.Parser, new[]{ "RestrictionType", "LanguageCode" }, null, new[]{ typeof(global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.RecognitionModelOptions), global::Speechkit.Stt.V3.RecognitionModelOptions.Parser, new[]{ "Model", "AudioFormat", "TextNormalization", "LanguageRestriction", "AudioProcessingType" }, null, new[]{ typeof(global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.SpeakerLabelingOptions), global::Speechkit.Stt.V3.SpeakerLabelingOptions.Parser, new[]{ "SpeakerLabeling" }, null, new[]{ typeof(global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.StreamingOptions), global::Speechkit.Stt.V3.StreamingOptions.Parser, new[]{ "RecognitionModel", "EouClassifier", "RecognitionClassifier", "SpeechAnalysis", "SpeakerLabeling" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.AudioChunk), global::Speechkit.Stt.V3.AudioChunk.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.SilenceChunk), global::Speechkit.Stt.V3.SilenceChunk.Parser, new[]{ "DurationMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.Eou), global::Speechkit.Stt.V3.Eou.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.StreamingRequest), global::Speechkit.Stt.V3.StreamingRequest.Parser, new[]{ "SessionOptions", "Chunk", "SilenceChunk", "Eou" }, new[]{ "Event" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.RecognizeFileRequest), global::Speechkit.Stt.V3.RecognizeFileRequest.Parser, new[]{ "Content", "Uri", "RecognitionModel", "RecognitionClassifier", "SpeechAnalysis" }, new[]{ "AudioSource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.Word), global::Speechkit.Stt.V3.Word.Parser, new[]{ "Text", "StartTimeMs", "EndTimeMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.LanguageEstimation), global::Speechkit.Stt.V3.LanguageEstimation.Parser, new[]{ "LanguageCode", "Probability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.Alternative), global::Speechkit.Stt.V3.Alternative.Parser, new[]{ "Words", "Text", "StartTimeMs", "EndTimeMs", "Confidence", "Languages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.EouUpdate), global::Speechkit.Stt.V3.EouUpdate.Parser, new[]{ "TimeMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.AlternativeUpdate), global::Speechkit.Stt.V3.AlternativeUpdate.Parser, new[]{ "Alternatives", "ChannelTag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.AudioCursors), global::Speechkit.Stt.V3.AudioCursors.Parser, new[]{ "ReceivedDataMs", "ResetTimeMs", "PartialTimeMs", "FinalTimeMs", "FinalIndex", "EouTimeMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.FinalRefinement), global::Speechkit.Stt.V3.FinalRefinement.Parser, new[]{ "FinalIndex", "NormalizedText" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.StatusCode), global::Speechkit.Stt.V3.StatusCode.Parser, new[]{ "CodeType", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.SessionUuid), global::Speechkit.Stt.V3.SessionUuid.Parser, new[]{ "Uuid", "UserRequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.PhraseHighlight), global::Speechkit.Stt.V3.PhraseHighlight.Parser, new[]{ "Text", "StartTimeMs", "EndTimeMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.RecognitionClassifierLabel), global::Speechkit.Stt.V3.RecognitionClassifierLabel.Parser, new[]{ "Label", "Confidence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.RecognitionClassifierResult), global::Speechkit.Stt.V3.RecognitionClassifierResult.Parser, new[]{ "Classifier", "Highlights", "Labels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.RecognitionClassifierUpdate), global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Parser, new[]{ "WindowType", "StartTimeMs", "EndTimeMs", "ClassifierResult" }, null, new[]{ typeof(global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.DescriptiveStatistics), global::Speechkit.Stt.V3.DescriptiveStatistics.Parser, new[]{ "Min", "Max", "Mean", "Std", "Quantiles" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.DescriptiveStatistics.Types.Quantile), global::Speechkit.Stt.V3.DescriptiveStatistics.Types.Quantile.Parser, new[]{ "Level", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.AudioSegmentBoundaries), global::Speechkit.Stt.V3.AudioSegmentBoundaries.Parser, new[]{ "StartTimeMs", "EndTimeMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.SpeakerAnalysis), global::Speechkit.Stt.V3.SpeakerAnalysis.Parser, new[]{ "SpeakerTag", "WindowType", "SpeechBoundaries", "TotalSpeechMs", "SpeechRatio", "TotalSilenceMs", "SilenceRatio", "WordsCount", "LettersCount", "WordsPerSecond", "LettersPerSecond", "WordsPerUtterance", "LettersPerUtterance", "UtteranceCount", "UtteranceDurationEstimation" }, null, new[]{ typeof(global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.ConversationAnalysis), global::Speechkit.Stt.V3.ConversationAnalysis.Parser, new[]{ "ConversationBoundaries", "TotalSimultaneousSilenceDurationMs", "TotalSimultaneousSilenceRatio", "SimultaneousSilenceDurationEstimation", "TotalSimultaneousSpeechDurationMs", "TotalSimultaneousSpeechRatio", "SimultaneousSpeechDurationEstimation", "SpeakerInterrupts", "TotalSpeechDurationMs", "TotalSpeechRatio" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.ConversationAnalysis.Types.InterruptsEvaluation), global::Speechkit.Stt.V3.ConversationAnalysis.Types.InterruptsEvaluation.Parser, new[]{ "SpeakerTag", "InterruptsCount", "InterruptsDurationMs", "Interrupts" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Speechkit.Stt.V3.StreamingResponse), global::Speechkit.Stt.V3.StreamingResponse.Parser, new[]{ "SessionUuid", "AudioCursors", "ResponseWallTimeMs", "Partial", "Final", "EouUpdate", "FinalRefinement", "StatusCode", "ClassifierUpdate", "SpeakerAnalysis", "ConversationAnalysis", "ChannelTag" }, new[]{ "Event" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CodeType {
    [global::System.ObsoleteAttribute]
    [pbr::OriginalName("CODE_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// All good.
    /// </summary>
    [pbr::OriginalName("WORKING")] Working = 1,
    /// <summary>
    /// For example, if speech is sent not in real time or context is unknown and we've made fallback.
    /// </summary>
    [pbr::OriginalName("WARNING")] Warning = 2,
    /// <summary>
    /// After session was closed.
    /// </summary>
    [pbr::OriginalName("CLOSED")] Closed = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Options
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TextNormalizationOptions : pb::IMessage<TextNormalizationOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextNormalizationOptions> _parser = new pb::MessageParser<TextNormalizationOptions>(() => new TextNormalizationOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextNormalizationOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextNormalizationOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextNormalizationOptions(TextNormalizationOptions other) : this() {
      textNormalization_ = other.textNormalization_;
      profanityFilter_ = other.profanityFilter_;
      literatureText_ = other.literatureText_;
      phoneFormattingMode_ = other.phoneFormattingMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextNormalizationOptions Clone() {
      return new TextNormalizationOptions(this);
    }

    /// <summary>Field number for the "text_normalization" field.</summary>
    public const int TextNormalizationFieldNumber = 1;
    private global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization textNormalization_ = global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization TextNormalization {
      get { return textNormalization_; }
      set {
        textNormalization_ = value;
      }
    }

    /// <summary>Field number for the "profanity_filter" field.</summary>
    public const int ProfanityFilterFieldNumber = 2;
    private bool profanityFilter_;
    /// <summary>
    /// Profanity filter (default: false).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ProfanityFilter {
      get { return profanityFilter_; }
      set {
        profanityFilter_ = value;
      }
    }

    /// <summary>Field number for the "literature_text" field.</summary>
    public const int LiteratureTextFieldNumber = 3;
    private bool literatureText_;
    /// <summary>
    /// Rewrite text in literature style (default: false).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LiteratureText {
      get { return literatureText_; }
      set {
        literatureText_ = value;
      }
    }

    /// <summary>Field number for the "phone_formatting_mode" field.</summary>
    public const int PhoneFormattingModeFieldNumber = 4;
    private global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode phoneFormattingMode_ = global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode.Unspecified;
    /// <summary>
    /// Define phone formatting mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode PhoneFormattingMode {
      get { return phoneFormattingMode_; }
      set {
        phoneFormattingMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextNormalizationOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextNormalizationOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TextNormalization != other.TextNormalization) return false;
      if (ProfanityFilter != other.ProfanityFilter) return false;
      if (LiteratureText != other.LiteratureText) return false;
      if (PhoneFormattingMode != other.PhoneFormattingMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TextNormalization != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization.Unspecified) hash ^= TextNormalization.GetHashCode();
      if (ProfanityFilter != false) hash ^= ProfanityFilter.GetHashCode();
      if (LiteratureText != false) hash ^= LiteratureText.GetHashCode();
      if (PhoneFormattingMode != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode.Unspecified) hash ^= PhoneFormattingMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TextNormalization != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TextNormalization);
      }
      if (ProfanityFilter != false) {
        output.WriteRawTag(16);
        output.WriteBool(ProfanityFilter);
      }
      if (LiteratureText != false) {
        output.WriteRawTag(24);
        output.WriteBool(LiteratureText);
      }
      if (PhoneFormattingMode != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PhoneFormattingMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TextNormalization != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TextNormalization);
      }
      if (ProfanityFilter != false) {
        output.WriteRawTag(16);
        output.WriteBool(ProfanityFilter);
      }
      if (LiteratureText != false) {
        output.WriteRawTag(24);
        output.WriteBool(LiteratureText);
      }
      if (PhoneFormattingMode != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PhoneFormattingMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TextNormalization != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TextNormalization);
      }
      if (ProfanityFilter != false) {
        size += 1 + 1;
      }
      if (LiteratureText != false) {
        size += 1 + 1;
      }
      if (PhoneFormattingMode != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PhoneFormattingMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextNormalizationOptions other) {
      if (other == null) {
        return;
      }
      if (other.TextNormalization != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization.Unspecified) {
        TextNormalization = other.TextNormalization;
      }
      if (other.ProfanityFilter != false) {
        ProfanityFilter = other.ProfanityFilter;
      }
      if (other.LiteratureText != false) {
        LiteratureText = other.LiteratureText;
      }
      if (other.PhoneFormattingMode != global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode.Unspecified) {
        PhoneFormattingMode = other.PhoneFormattingMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TextNormalization = (global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization) input.ReadEnum();
            break;
          }
          case 16: {
            ProfanityFilter = input.ReadBool();
            break;
          }
          case 24: {
            LiteratureText = input.ReadBool();
            break;
          }
          case 32: {
            PhoneFormattingMode = (global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TextNormalization = (global::Speechkit.Stt.V3.TextNormalizationOptions.Types.TextNormalization) input.ReadEnum();
            break;
          }
          case 16: {
            ProfanityFilter = input.ReadBool();
            break;
          }
          case 24: {
            LiteratureText = input.ReadBool();
            break;
          }
          case 32: {
            PhoneFormattingMode = (global::Speechkit.Stt.V3.TextNormalizationOptions.Types.PhoneFormattingMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TextNormalizationOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Normalization 
      /// </summary>
      public enum TextNormalization {
        [pbr::OriginalName("TEXT_NORMALIZATION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Enable normalization
        /// </summary>
        [pbr::OriginalName("TEXT_NORMALIZATION_ENABLED")] Enabled = 1,
        /// <summary>
        /// Disable normalization
        /// </summary>
        [pbr::OriginalName("TEXT_NORMALIZATION_DISABLED")] Disabled = 2,
      }

      public enum PhoneFormattingMode {
        [pbr::OriginalName("PHONE_FORMATTING_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Disable phone formatting
        /// </summary>
        [pbr::OriginalName("PHONE_FORMATTING_MODE_DISABLED")] Disabled = 1,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DefaultEouClassifier : pb::IMessage<DefaultEouClassifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DefaultEouClassifier> _parser = new pb::MessageParser<DefaultEouClassifier>(() => new DefaultEouClassifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DefaultEouClassifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefaultEouClassifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefaultEouClassifier(DefaultEouClassifier other) : this() {
      type_ = other.type_;
      maxPauseBetweenWordsHintMs_ = other.maxPauseBetweenWordsHintMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefaultEouClassifier Clone() {
      return new DefaultEouClassifier(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity type_ = global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity.Unspecified;
    /// <summary>
    /// EOU sensitivity. Currently two levels, faster with more error and more conservative (our default).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "max_pause_between_words_hint_ms" field.</summary>
    public const int MaxPauseBetweenWordsHintMsFieldNumber = 2;
    private long maxPauseBetweenWordsHintMs_;
    /// <summary>
    /// Hint for max pause between words. Our EOU detector could use this information to distinguish between end of utterance and slow speech (like one &lt;long pause> two &lt;long pause> three, etc).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxPauseBetweenWordsHintMs {
      get { return maxPauseBetweenWordsHintMs_; }
      set {
        maxPauseBetweenWordsHintMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DefaultEouClassifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DefaultEouClassifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (MaxPauseBetweenWordsHintMs != other.MaxPauseBetweenWordsHintMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity.Unspecified) hash ^= Type.GetHashCode();
      if (MaxPauseBetweenWordsHintMs != 0L) hash ^= MaxPauseBetweenWordsHintMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MaxPauseBetweenWordsHintMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxPauseBetweenWordsHintMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MaxPauseBetweenWordsHintMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxPauseBetweenWordsHintMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MaxPauseBetweenWordsHintMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPauseBetweenWordsHintMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DefaultEouClassifier other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity.Unspecified) {
        Type = other.Type;
      }
      if (other.MaxPauseBetweenWordsHintMs != 0L) {
        MaxPauseBetweenWordsHintMs = other.MaxPauseBetweenWordsHintMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity) input.ReadEnum();
            break;
          }
          case 16: {
            MaxPauseBetweenWordsHintMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Speechkit.Stt.V3.DefaultEouClassifier.Types.EouSensitivity) input.ReadEnum();
            break;
          }
          case 16: {
            MaxPauseBetweenWordsHintMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DefaultEouClassifier message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum EouSensitivity {
        [pbr::OriginalName("EOU_SENSITIVITY_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("DEFAULT")] Default = 1,
        [pbr::OriginalName("HIGH")] High = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Use EOU provided by user
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExternalEouClassifier : pb::IMessage<ExternalEouClassifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExternalEouClassifier> _parser = new pb::MessageParser<ExternalEouClassifier>(() => new ExternalEouClassifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExternalEouClassifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEouClassifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEouClassifier(ExternalEouClassifier other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEouClassifier Clone() {
      return new ExternalEouClassifier(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExternalEouClassifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExternalEouClassifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExternalEouClassifier other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EouClassifierOptions : pb::IMessage<EouClassifierOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EouClassifierOptions> _parser = new pb::MessageParser<EouClassifierOptions>(() => new EouClassifierOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EouClassifierOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EouClassifierOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EouClassifierOptions(EouClassifierOptions other) : this() {
      switch (other.ClassifierCase) {
        case ClassifierOneofCase.DefaultClassifier:
          DefaultClassifier = other.DefaultClassifier.Clone();
          break;
        case ClassifierOneofCase.ExternalClassifier:
          ExternalClassifier = other.ExternalClassifier.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EouClassifierOptions Clone() {
      return new EouClassifierOptions(this);
    }

    /// <summary>Field number for the "default_classifier" field.</summary>
    public const int DefaultClassifierFieldNumber = 1;
    /// <summary>
    /// EOU classifier provided by SpeechKit. Default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DefaultEouClassifier DefaultClassifier {
      get { return classifierCase_ == ClassifierOneofCase.DefaultClassifier ? (global::Speechkit.Stt.V3.DefaultEouClassifier) classifier_ : null; }
      set {
        classifier_ = value;
        classifierCase_ = value == null ? ClassifierOneofCase.None : ClassifierOneofCase.DefaultClassifier;
      }
    }

    /// <summary>Field number for the "external_classifier" field.</summary>
    public const int ExternalClassifierFieldNumber = 2;
    /// <summary>
    /// EOU is enforced by external messages from user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.ExternalEouClassifier ExternalClassifier {
      get { return classifierCase_ == ClassifierOneofCase.ExternalClassifier ? (global::Speechkit.Stt.V3.ExternalEouClassifier) classifier_ : null; }
      set {
        classifier_ = value;
        classifierCase_ = value == null ? ClassifierOneofCase.None : ClassifierOneofCase.ExternalClassifier;
      }
    }

    private object classifier_;
    /// <summary>Enum of possible cases for the "Classifier" oneof.</summary>
    public enum ClassifierOneofCase {
      None = 0,
      DefaultClassifier = 1,
      ExternalClassifier = 2,
    }
    private ClassifierOneofCase classifierCase_ = ClassifierOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClassifierOneofCase ClassifierCase {
      get { return classifierCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClassifier() {
      classifierCase_ = ClassifierOneofCase.None;
      classifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EouClassifierOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EouClassifierOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DefaultClassifier, other.DefaultClassifier)) return false;
      if (!object.Equals(ExternalClassifier, other.ExternalClassifier)) return false;
      if (ClassifierCase != other.ClassifierCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (classifierCase_ == ClassifierOneofCase.DefaultClassifier) hash ^= DefaultClassifier.GetHashCode();
      if (classifierCase_ == ClassifierOneofCase.ExternalClassifier) hash ^= ExternalClassifier.GetHashCode();
      hash ^= (int) classifierCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (classifierCase_ == ClassifierOneofCase.DefaultClassifier) {
        output.WriteRawTag(10);
        output.WriteMessage(DefaultClassifier);
      }
      if (classifierCase_ == ClassifierOneofCase.ExternalClassifier) {
        output.WriteRawTag(18);
        output.WriteMessage(ExternalClassifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (classifierCase_ == ClassifierOneofCase.DefaultClassifier) {
        output.WriteRawTag(10);
        output.WriteMessage(DefaultClassifier);
      }
      if (classifierCase_ == ClassifierOneofCase.ExternalClassifier) {
        output.WriteRawTag(18);
        output.WriteMessage(ExternalClassifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (classifierCase_ == ClassifierOneofCase.DefaultClassifier) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultClassifier);
      }
      if (classifierCase_ == ClassifierOneofCase.ExternalClassifier) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalClassifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EouClassifierOptions other) {
      if (other == null) {
        return;
      }
      switch (other.ClassifierCase) {
        case ClassifierOneofCase.DefaultClassifier:
          if (DefaultClassifier == null) {
            DefaultClassifier = new global::Speechkit.Stt.V3.DefaultEouClassifier();
          }
          DefaultClassifier.MergeFrom(other.DefaultClassifier);
          break;
        case ClassifierOneofCase.ExternalClassifier:
          if (ExternalClassifier == null) {
            ExternalClassifier = new global::Speechkit.Stt.V3.ExternalEouClassifier();
          }
          ExternalClassifier.MergeFrom(other.ExternalClassifier);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Speechkit.Stt.V3.DefaultEouClassifier subBuilder = new global::Speechkit.Stt.V3.DefaultEouClassifier();
            if (classifierCase_ == ClassifierOneofCase.DefaultClassifier) {
              subBuilder.MergeFrom(DefaultClassifier);
            }
            input.ReadMessage(subBuilder);
            DefaultClassifier = subBuilder;
            break;
          }
          case 18: {
            global::Speechkit.Stt.V3.ExternalEouClassifier subBuilder = new global::Speechkit.Stt.V3.ExternalEouClassifier();
            if (classifierCase_ == ClassifierOneofCase.ExternalClassifier) {
              subBuilder.MergeFrom(ExternalClassifier);
            }
            input.ReadMessage(subBuilder);
            ExternalClassifier = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Speechkit.Stt.V3.DefaultEouClassifier subBuilder = new global::Speechkit.Stt.V3.DefaultEouClassifier();
            if (classifierCase_ == ClassifierOneofCase.DefaultClassifier) {
              subBuilder.MergeFrom(DefaultClassifier);
            }
            input.ReadMessage(subBuilder);
            DefaultClassifier = subBuilder;
            break;
          }
          case 18: {
            global::Speechkit.Stt.V3.ExternalEouClassifier subBuilder = new global::Speechkit.Stt.V3.ExternalEouClassifier();
            if (classifierCase_ == ClassifierOneofCase.ExternalClassifier) {
              subBuilder.MergeFrom(ExternalClassifier);
            }
            input.ReadMessage(subBuilder);
            ExternalClassifier = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RecognitionClassifier : pb::IMessage<RecognitionClassifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecognitionClassifier> _parser = new pb::MessageParser<RecognitionClassifier>(() => new RecognitionClassifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecognitionClassifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifier(RecognitionClassifier other) : this() {
      classifier_ = other.classifier_;
      triggers_ = other.triggers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifier Clone() {
      return new RecognitionClassifier(this);
    }

    /// <summary>Field number for the "classifier" field.</summary>
    public const int ClassifierFieldNumber = 1;
    private string classifier_ = "";
    /// <summary>
    /// Classifier name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Classifier {
      get { return classifier_; }
      set {
        classifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "triggers" field.</summary>
    public const int TriggersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.RecognitionClassifier.Types.TriggerType> _repeated_triggers_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Speechkit.Stt.V3.RecognitionClassifier.Types.TriggerType) x);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifier.Types.TriggerType> triggers_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifier.Types.TriggerType>();
    /// <summary>
    /// Describes the types of responses to which the classification results will come
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifier.Types.TriggerType> Triggers {
      get { return triggers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecognitionClassifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecognitionClassifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Classifier != other.Classifier) return false;
      if(!triggers_.Equals(other.triggers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Classifier.Length != 0) hash ^= Classifier.GetHashCode();
      hash ^= triggers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Classifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Classifier);
      }
      triggers_.WriteTo(output, _repeated_triggers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Classifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Classifier);
      }
      triggers_.WriteTo(ref output, _repeated_triggers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Classifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Classifier);
      }
      size += triggers_.CalculateSize(_repeated_triggers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecognitionClassifier other) {
      if (other == null) {
        return;
      }
      if (other.Classifier.Length != 0) {
        Classifier = other.Classifier;
      }
      triggers_.Add(other.triggers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Classifier = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            triggers_.AddEntriesFrom(input, _repeated_triggers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Classifier = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            triggers_.AddEntriesFrom(ref input, _repeated_triggers_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RecognitionClassifier message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Type of recognition classifier trigger.
      /// </summary>
      public enum TriggerType {
        [global::System.ObsoleteAttribute]
        [pbr::OriginalName("TRIGGER_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Apply classifier to utterance responses
        /// </summary>
        [pbr::OriginalName("ON_UTTERANCE")] OnUtterance = 1,
        /// <summary>
        /// Apply classifier to final responses
        /// </summary>
        [pbr::OriginalName("ON_FINAL")] OnFinal = 2,
        /// <summary>
        /// Apply classifier to partial responses
        /// </summary>
        [pbr::OriginalName("ON_PARTIAL")] OnPartial = 3,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RecognitionClassifierOptions : pb::IMessage<RecognitionClassifierOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecognitionClassifierOptions> _parser = new pb::MessageParser<RecognitionClassifierOptions>(() => new RecognitionClassifierOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecognitionClassifierOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierOptions(RecognitionClassifierOptions other) : this() {
      classifiers_ = other.classifiers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierOptions Clone() {
      return new RecognitionClassifierOptions(this);
    }

    /// <summary>Field number for the "classifiers" field.</summary>
    public const int ClassifiersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.RecognitionClassifier> _repeated_classifiers_codec
        = pb::FieldCodec.ForMessage(10, global::Speechkit.Stt.V3.RecognitionClassifier.Parser);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifier> classifiers_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifier>();
    /// <summary>
    /// List of classifiers to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifier> Classifiers {
      get { return classifiers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecognitionClassifierOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecognitionClassifierOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!classifiers_.Equals(other.classifiers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= classifiers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      classifiers_.WriteTo(output, _repeated_classifiers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      classifiers_.WriteTo(ref output, _repeated_classifiers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += classifiers_.CalculateSize(_repeated_classifiers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecognitionClassifierOptions other) {
      if (other == null) {
        return;
      }
      classifiers_.Add(other.classifiers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            classifiers_.AddEntriesFrom(input, _repeated_classifiers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            classifiers_.AddEntriesFrom(ref input, _repeated_classifiers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpeechAnalysisOptions : pb::IMessage<SpeechAnalysisOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpeechAnalysisOptions> _parser = new pb::MessageParser<SpeechAnalysisOptions>(() => new SpeechAnalysisOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpeechAnalysisOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeechAnalysisOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeechAnalysisOptions(SpeechAnalysisOptions other) : this() {
      enableSpeakerAnalysis_ = other.enableSpeakerAnalysis_;
      enableConversationAnalysis_ = other.enableConversationAnalysis_;
      descriptiveStatisticsQuantiles_ = other.descriptiveStatisticsQuantiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeechAnalysisOptions Clone() {
      return new SpeechAnalysisOptions(this);
    }

    /// <summary>Field number for the "enable_speaker_analysis" field.</summary>
    public const int EnableSpeakerAnalysisFieldNumber = 1;
    private bool enableSpeakerAnalysis_;
    /// <summary>
    /// Analyse speech for every speaker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableSpeakerAnalysis {
      get { return enableSpeakerAnalysis_; }
      set {
        enableSpeakerAnalysis_ = value;
      }
    }

    /// <summary>Field number for the "enable_conversation_analysis" field.</summary>
    public const int EnableConversationAnalysisFieldNumber = 2;
    private bool enableConversationAnalysis_;
    /// <summary>
    /// Analyse conversation of two speakers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableConversationAnalysis {
      get { return enableConversationAnalysis_; }
      set {
        enableConversationAnalysis_ = value;
      }
    }

    /// <summary>Field number for the "descriptive_statistics_quantiles" field.</summary>
    public const int DescriptiveStatisticsQuantilesFieldNumber = 3;
    private static readonly pb::FieldCodec<double> _repeated_descriptiveStatisticsQuantiles_codec
        = pb::FieldCodec.ForDouble(26);
    private readonly pbc::RepeatedField<double> descriptiveStatisticsQuantiles_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Quantile levels in range (0, 1) for descriptive statistics
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> DescriptiveStatisticsQuantiles {
      get { return descriptiveStatisticsQuantiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpeechAnalysisOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpeechAnalysisOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableSpeakerAnalysis != other.EnableSpeakerAnalysis) return false;
      if (EnableConversationAnalysis != other.EnableConversationAnalysis) return false;
      if(!descriptiveStatisticsQuantiles_.Equals(other.descriptiveStatisticsQuantiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableSpeakerAnalysis != false) hash ^= EnableSpeakerAnalysis.GetHashCode();
      if (EnableConversationAnalysis != false) hash ^= EnableConversationAnalysis.GetHashCode();
      hash ^= descriptiveStatisticsQuantiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EnableSpeakerAnalysis != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableSpeakerAnalysis);
      }
      if (EnableConversationAnalysis != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableConversationAnalysis);
      }
      descriptiveStatisticsQuantiles_.WriteTo(output, _repeated_descriptiveStatisticsQuantiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EnableSpeakerAnalysis != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableSpeakerAnalysis);
      }
      if (EnableConversationAnalysis != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableConversationAnalysis);
      }
      descriptiveStatisticsQuantiles_.WriteTo(ref output, _repeated_descriptiveStatisticsQuantiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EnableSpeakerAnalysis != false) {
        size += 1 + 1;
      }
      if (EnableConversationAnalysis != false) {
        size += 1 + 1;
      }
      size += descriptiveStatisticsQuantiles_.CalculateSize(_repeated_descriptiveStatisticsQuantiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpeechAnalysisOptions other) {
      if (other == null) {
        return;
      }
      if (other.EnableSpeakerAnalysis != false) {
        EnableSpeakerAnalysis = other.EnableSpeakerAnalysis;
      }
      if (other.EnableConversationAnalysis != false) {
        EnableConversationAnalysis = other.EnableConversationAnalysis;
      }
      descriptiveStatisticsQuantiles_.Add(other.descriptiveStatisticsQuantiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableSpeakerAnalysis = input.ReadBool();
            break;
          }
          case 16: {
            EnableConversationAnalysis = input.ReadBool();
            break;
          }
          case 26:
          case 25: {
            descriptiveStatisticsQuantiles_.AddEntriesFrom(input, _repeated_descriptiveStatisticsQuantiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnableSpeakerAnalysis = input.ReadBool();
            break;
          }
          case 16: {
            EnableConversationAnalysis = input.ReadBool();
            break;
          }
          case 26:
          case 25: {
            descriptiveStatisticsQuantiles_.AddEntriesFrom(ref input, _repeated_descriptiveStatisticsQuantiles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RAW Audio format spec (no container to infer type). Used in AudioFormat options.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RawAudio : pb::IMessage<RawAudio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RawAudio> _parser = new pb::MessageParser<RawAudio>(() => new RawAudio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RawAudio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RawAudio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RawAudio(RawAudio other) : this() {
      audioEncoding_ = other.audioEncoding_;
      sampleRateHertz_ = other.sampleRateHertz_;
      audioChannelCount_ = other.audioChannelCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RawAudio Clone() {
      return new RawAudio(this);
    }

    /// <summary>Field number for the "audio_encoding" field.</summary>
    public const int AudioEncodingFieldNumber = 1;
    private global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding audioEncoding_ = global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding.Unspecified;
    /// <summary>
    /// Type of audio encoding
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding AudioEncoding {
      get { return audioEncoding_; }
      set {
        audioEncoding_ = value;
      }
    }

    /// <summary>Field number for the "sample_rate_hertz" field.</summary>
    public const int SampleRateHertzFieldNumber = 2;
    private long sampleRateHertz_;
    /// <summary>
    /// PCM sample rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SampleRateHertz {
      get { return sampleRateHertz_; }
      set {
        sampleRateHertz_ = value;
      }
    }

    /// <summary>Field number for the "audio_channel_count" field.</summary>
    public const int AudioChannelCountFieldNumber = 3;
    private long audioChannelCount_;
    /// <summary>
    /// PCM channel count. Currently only single channel audio is supported in real-time recognition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AudioChannelCount {
      get { return audioChannelCount_; }
      set {
        audioChannelCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RawAudio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RawAudio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AudioEncoding != other.AudioEncoding) return false;
      if (SampleRateHertz != other.SampleRateHertz) return false;
      if (AudioChannelCount != other.AudioChannelCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AudioEncoding != global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding.Unspecified) hash ^= AudioEncoding.GetHashCode();
      if (SampleRateHertz != 0L) hash ^= SampleRateHertz.GetHashCode();
      if (AudioChannelCount != 0L) hash ^= AudioChannelCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AudioEncoding != global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AudioEncoding);
      }
      if (SampleRateHertz != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SampleRateHertz);
      }
      if (AudioChannelCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AudioChannelCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AudioEncoding != global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AudioEncoding);
      }
      if (SampleRateHertz != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SampleRateHertz);
      }
      if (AudioChannelCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AudioChannelCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AudioEncoding != global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AudioEncoding);
      }
      if (SampleRateHertz != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SampleRateHertz);
      }
      if (AudioChannelCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AudioChannelCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RawAudio other) {
      if (other == null) {
        return;
      }
      if (other.AudioEncoding != global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding.Unspecified) {
        AudioEncoding = other.AudioEncoding;
      }
      if (other.SampleRateHertz != 0L) {
        SampleRateHertz = other.SampleRateHertz;
      }
      if (other.AudioChannelCount != 0L) {
        AudioChannelCount = other.AudioChannelCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AudioEncoding = (global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding) input.ReadEnum();
            break;
          }
          case 16: {
            SampleRateHertz = input.ReadInt64();
            break;
          }
          case 24: {
            AudioChannelCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AudioEncoding = (global::Speechkit.Stt.V3.RawAudio.Types.AudioEncoding) input.ReadEnum();
            break;
          }
          case 16: {
            SampleRateHertz = input.ReadInt64();
            break;
          }
          case 24: {
            AudioChannelCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RawAudio message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AudioEncoding {
        [pbr::OriginalName("AUDIO_ENCODING_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Audio bit depth 16-bit signed little-endian (Linear PCM).
        /// </summary>
        [pbr::OriginalName("LINEAR16_PCM")] Linear16Pcm = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Audio with fixed type in container. Used in AudioFormat options.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ContainerAudio : pb::IMessage<ContainerAudio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContainerAudio> _parser = new pb::MessageParser<ContainerAudio>(() => new ContainerAudio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ContainerAudio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContainerAudio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContainerAudio(ContainerAudio other) : this() {
      containerAudioType_ = other.containerAudioType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContainerAudio Clone() {
      return new ContainerAudio(this);
    }

    /// <summary>Field number for the "container_audio_type" field.</summary>
    public const int ContainerAudioTypeFieldNumber = 1;
    private global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType containerAudioType_ = global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType.Unspecified;
    /// <summary>
    /// Type of audio container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType ContainerAudioType {
      get { return containerAudioType_; }
      set {
        containerAudioType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ContainerAudio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ContainerAudio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContainerAudioType != other.ContainerAudioType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ContainerAudioType != global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType.Unspecified) hash ^= ContainerAudioType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContainerAudioType != global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ContainerAudioType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContainerAudioType != global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ContainerAudioType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ContainerAudioType != global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContainerAudioType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ContainerAudio other) {
      if (other == null) {
        return;
      }
      if (other.ContainerAudioType != global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType.Unspecified) {
        ContainerAudioType = other.ContainerAudioType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ContainerAudioType = (global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ContainerAudioType = (global::Speechkit.Stt.V3.ContainerAudio.Types.ContainerAudioType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ContainerAudio message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ContainerAudioType {
        [pbr::OriginalName("CONTAINER_AUDIO_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Audio bit depth 16-bit signed little-endian (Linear PCM).
        /// </summary>
        [pbr::OriginalName("WAV")] Wav = 1,
        /// <summary>
        /// Data is encoded using the OPUS audio codec and compressed using the OGG container format.
        /// </summary>
        [pbr::OriginalName("OGG_OPUS")] OggOpus = 2,
        /// <summary>
        /// Data is encoded using MPEG-1/2 Layer III and compressed using the MP3 container format.
        /// </summary>
        [pbr::OriginalName("MP3")] Mp3 = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Audio format options.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AudioFormatOptions : pb::IMessage<AudioFormatOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioFormatOptions> _parser = new pb::MessageParser<AudioFormatOptions>(() => new AudioFormatOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioFormatOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioFormatOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioFormatOptions(AudioFormatOptions other) : this() {
      switch (other.AudioFormatCase) {
        case AudioFormatOneofCase.RawAudio:
          RawAudio = other.RawAudio.Clone();
          break;
        case AudioFormatOneofCase.ContainerAudio:
          ContainerAudio = other.ContainerAudio.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioFormatOptions Clone() {
      return new AudioFormatOptions(this);
    }

    /// <summary>Field number for the "raw_audio" field.</summary>
    public const int RawAudioFieldNumber = 1;
    /// <summary>
    /// Audio without container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RawAudio RawAudio {
      get { return audioFormatCase_ == AudioFormatOneofCase.RawAudio ? (global::Speechkit.Stt.V3.RawAudio) audioFormat_ : null; }
      set {
        audioFormat_ = value;
        audioFormatCase_ = value == null ? AudioFormatOneofCase.None : AudioFormatOneofCase.RawAudio;
      }
    }

    /// <summary>Field number for the "container_audio" field.</summary>
    public const int ContainerAudioFieldNumber = 2;
    /// <summary>
    /// Audio is wrapped in container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.ContainerAudio ContainerAudio {
      get { return audioFormatCase_ == AudioFormatOneofCase.ContainerAudio ? (global::Speechkit.Stt.V3.ContainerAudio) audioFormat_ : null; }
      set {
        audioFormat_ = value;
        audioFormatCase_ = value == null ? AudioFormatOneofCase.None : AudioFormatOneofCase.ContainerAudio;
      }
    }

    private object audioFormat_;
    /// <summary>Enum of possible cases for the "AudioFormat" oneof.</summary>
    public enum AudioFormatOneofCase {
      None = 0,
      RawAudio = 1,
      ContainerAudio = 2,
    }
    private AudioFormatOneofCase audioFormatCase_ = AudioFormatOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioFormatOneofCase AudioFormatCase {
      get { return audioFormatCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioFormat() {
      audioFormatCase_ = AudioFormatOneofCase.None;
      audioFormat_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioFormatOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioFormatOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RawAudio, other.RawAudio)) return false;
      if (!object.Equals(ContainerAudio, other.ContainerAudio)) return false;
      if (AudioFormatCase != other.AudioFormatCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (audioFormatCase_ == AudioFormatOneofCase.RawAudio) hash ^= RawAudio.GetHashCode();
      if (audioFormatCase_ == AudioFormatOneofCase.ContainerAudio) hash ^= ContainerAudio.GetHashCode();
      hash ^= (int) audioFormatCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (audioFormatCase_ == AudioFormatOneofCase.RawAudio) {
        output.WriteRawTag(10);
        output.WriteMessage(RawAudio);
      }
      if (audioFormatCase_ == AudioFormatOneofCase.ContainerAudio) {
        output.WriteRawTag(18);
        output.WriteMessage(ContainerAudio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (audioFormatCase_ == AudioFormatOneofCase.RawAudio) {
        output.WriteRawTag(10);
        output.WriteMessage(RawAudio);
      }
      if (audioFormatCase_ == AudioFormatOneofCase.ContainerAudio) {
        output.WriteRawTag(18);
        output.WriteMessage(ContainerAudio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (audioFormatCase_ == AudioFormatOneofCase.RawAudio) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawAudio);
      }
      if (audioFormatCase_ == AudioFormatOneofCase.ContainerAudio) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerAudio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioFormatOptions other) {
      if (other == null) {
        return;
      }
      switch (other.AudioFormatCase) {
        case AudioFormatOneofCase.RawAudio:
          if (RawAudio == null) {
            RawAudio = new global::Speechkit.Stt.V3.RawAudio();
          }
          RawAudio.MergeFrom(other.RawAudio);
          break;
        case AudioFormatOneofCase.ContainerAudio:
          if (ContainerAudio == null) {
            ContainerAudio = new global::Speechkit.Stt.V3.ContainerAudio();
          }
          ContainerAudio.MergeFrom(other.ContainerAudio);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Speechkit.Stt.V3.RawAudio subBuilder = new global::Speechkit.Stt.V3.RawAudio();
            if (audioFormatCase_ == AudioFormatOneofCase.RawAudio) {
              subBuilder.MergeFrom(RawAudio);
            }
            input.ReadMessage(subBuilder);
            RawAudio = subBuilder;
            break;
          }
          case 18: {
            global::Speechkit.Stt.V3.ContainerAudio subBuilder = new global::Speechkit.Stt.V3.ContainerAudio();
            if (audioFormatCase_ == AudioFormatOneofCase.ContainerAudio) {
              subBuilder.MergeFrom(ContainerAudio);
            }
            input.ReadMessage(subBuilder);
            ContainerAudio = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Speechkit.Stt.V3.RawAudio subBuilder = new global::Speechkit.Stt.V3.RawAudio();
            if (audioFormatCase_ == AudioFormatOneofCase.RawAudio) {
              subBuilder.MergeFrom(RawAudio);
            }
            input.ReadMessage(subBuilder);
            RawAudio = subBuilder;
            break;
          }
          case 18: {
            global::Speechkit.Stt.V3.ContainerAudio subBuilder = new global::Speechkit.Stt.V3.ContainerAudio();
            if (audioFormatCase_ == AudioFormatOneofCase.ContainerAudio) {
              subBuilder.MergeFrom(ContainerAudio);
            }
            input.ReadMessage(subBuilder);
            ContainerAudio = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Type of restriction for the list of languages expected in the incoming speech stream.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LanguageRestrictionOptions : pb::IMessage<LanguageRestrictionOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LanguageRestrictionOptions> _parser = new pb::MessageParser<LanguageRestrictionOptions>(() => new LanguageRestrictionOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LanguageRestrictionOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LanguageRestrictionOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LanguageRestrictionOptions(LanguageRestrictionOptions other) : this() {
      restrictionType_ = other.restrictionType_;
      languageCode_ = other.languageCode_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LanguageRestrictionOptions Clone() {
      return new LanguageRestrictionOptions(this);
    }

    /// <summary>Field number for the "restriction_type" field.</summary>
    public const int RestrictionTypeFieldNumber = 1;
    private global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType restrictionType_ = global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType.Unspecified;
    /// <summary>
    /// Language restriction type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType RestrictionType {
      get { return restrictionType_; }
      set {
        restrictionType_ = value;
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_languageCode_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> languageCode_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of language codes to restrict recognition in the case of an auto model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> LanguageCode {
      get { return languageCode_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LanguageRestrictionOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LanguageRestrictionOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RestrictionType != other.RestrictionType) return false;
      if(!languageCode_.Equals(other.languageCode_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RestrictionType != global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType.Unspecified) hash ^= RestrictionType.GetHashCode();
      hash ^= languageCode_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RestrictionType != global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RestrictionType);
      }
      languageCode_.WriteTo(output, _repeated_languageCode_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RestrictionType != global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RestrictionType);
      }
      languageCode_.WriteTo(ref output, _repeated_languageCode_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RestrictionType != global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RestrictionType);
      }
      size += languageCode_.CalculateSize(_repeated_languageCode_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LanguageRestrictionOptions other) {
      if (other == null) {
        return;
      }
      if (other.RestrictionType != global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType.Unspecified) {
        RestrictionType = other.RestrictionType;
      }
      languageCode_.Add(other.languageCode_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RestrictionType = (global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType) input.ReadEnum();
            break;
          }
          case 18: {
            languageCode_.AddEntriesFrom(input, _repeated_languageCode_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RestrictionType = (global::Speechkit.Stt.V3.LanguageRestrictionOptions.Types.LanguageRestrictionType) input.ReadEnum();
            break;
          }
          case 18: {
            languageCode_.AddEntriesFrom(ref input, _repeated_languageCode_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LanguageRestrictionOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum LanguageRestrictionType {
        [pbr::OriginalName("LANGUAGE_RESTRICTION_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The allowing list. The incoming audio can contain only the listed languages.
        /// </summary>
        [pbr::OriginalName("WHITELIST")] Whitelist = 1,
        /// <summary>
        /// The forbidding list. The incoming audio cannot contain the listed languages.
        /// </summary>
        [pbr::OriginalName("BLACKLIST")] Blacklist = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RecognitionModelOptions : pb::IMessage<RecognitionModelOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecognitionModelOptions> _parser = new pb::MessageParser<RecognitionModelOptions>(() => new RecognitionModelOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecognitionModelOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionModelOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionModelOptions(RecognitionModelOptions other) : this() {
      model_ = other.model_;
      audioFormat_ = other.audioFormat_ != null ? other.audioFormat_.Clone() : null;
      textNormalization_ = other.textNormalization_ != null ? other.textNormalization_.Clone() : null;
      languageRestriction_ = other.languageRestriction_ != null ? other.languageRestriction_.Clone() : null;
      audioProcessingType_ = other.audioProcessingType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionModelOptions Clone() {
      return new RecognitionModelOptions(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private string model_ = "";
    /// <summary>
    /// Sets the recognition model for the cloud version of SpeechKit. Possible values: 'general', 'general:rc', 'general:deprecated'.
    /// The model is ignored for SpeechKit Hybrid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audio_format" field.</summary>
    public const int AudioFormatFieldNumber = 2;
    private global::Speechkit.Stt.V3.AudioFormatOptions audioFormat_;
    /// <summary>
    /// Specified input audio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.AudioFormatOptions AudioFormat {
      get { return audioFormat_; }
      set {
        audioFormat_ = value;
      }
    }

    /// <summary>Field number for the "text_normalization" field.</summary>
    public const int TextNormalizationFieldNumber = 3;
    private global::Speechkit.Stt.V3.TextNormalizationOptions textNormalization_;
    /// <summary>
    /// Text normalization options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.TextNormalizationOptions TextNormalization {
      get { return textNormalization_; }
      set {
        textNormalization_ = value;
      }
    }

    /// <summary>Field number for the "language_restriction" field.</summary>
    public const int LanguageRestrictionFieldNumber = 4;
    private global::Speechkit.Stt.V3.LanguageRestrictionOptions languageRestriction_;
    /// <summary>
    /// Possible languages in audio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.LanguageRestrictionOptions LanguageRestriction {
      get { return languageRestriction_; }
      set {
        languageRestriction_ = value;
      }
    }

    /// <summary>Field number for the "audio_processing_type" field.</summary>
    public const int AudioProcessingTypeFieldNumber = 5;
    private global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType audioProcessingType_ = global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType.Unspecified;
    /// <summary>
    /// How to deal with audio data (in real time, after all data is received, etc). Default is REAL_TIME.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType AudioProcessingType {
      get { return audioProcessingType_; }
      set {
        audioProcessingType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecognitionModelOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecognitionModelOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Model != other.Model) return false;
      if (!object.Equals(AudioFormat, other.AudioFormat)) return false;
      if (!object.Equals(TextNormalization, other.TextNormalization)) return false;
      if (!object.Equals(LanguageRestriction, other.LanguageRestriction)) return false;
      if (AudioProcessingType != other.AudioProcessingType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (audioFormat_ != null) hash ^= AudioFormat.GetHashCode();
      if (textNormalization_ != null) hash ^= TextNormalization.GetHashCode();
      if (languageRestriction_ != null) hash ^= LanguageRestriction.GetHashCode();
      if (AudioProcessingType != global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType.Unspecified) hash ^= AudioProcessingType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Model.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
      if (audioFormat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AudioFormat);
      }
      if (textNormalization_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TextNormalization);
      }
      if (languageRestriction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LanguageRestriction);
      }
      if (AudioProcessingType != global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AudioProcessingType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Model.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
      if (audioFormat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AudioFormat);
      }
      if (textNormalization_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TextNormalization);
      }
      if (languageRestriction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LanguageRestriction);
      }
      if (AudioProcessingType != global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AudioProcessingType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (audioFormat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioFormat);
      }
      if (textNormalization_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextNormalization);
      }
      if (languageRestriction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LanguageRestriction);
      }
      if (AudioProcessingType != global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AudioProcessingType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecognitionModelOptions other) {
      if (other == null) {
        return;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.audioFormat_ != null) {
        if (audioFormat_ == null) {
          AudioFormat = new global::Speechkit.Stt.V3.AudioFormatOptions();
        }
        AudioFormat.MergeFrom(other.AudioFormat);
      }
      if (other.textNormalization_ != null) {
        if (textNormalization_ == null) {
          TextNormalization = new global::Speechkit.Stt.V3.TextNormalizationOptions();
        }
        TextNormalization.MergeFrom(other.TextNormalization);
      }
      if (other.languageRestriction_ != null) {
        if (languageRestriction_ == null) {
          LanguageRestriction = new global::Speechkit.Stt.V3.LanguageRestrictionOptions();
        }
        LanguageRestriction.MergeFrom(other.LanguageRestriction);
      }
      if (other.AudioProcessingType != global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType.Unspecified) {
        AudioProcessingType = other.AudioProcessingType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
          case 18: {
            if (audioFormat_ == null) {
              AudioFormat = new global::Speechkit.Stt.V3.AudioFormatOptions();
            }
            input.ReadMessage(AudioFormat);
            break;
          }
          case 26: {
            if (textNormalization_ == null) {
              TextNormalization = new global::Speechkit.Stt.V3.TextNormalizationOptions();
            }
            input.ReadMessage(TextNormalization);
            break;
          }
          case 34: {
            if (languageRestriction_ == null) {
              LanguageRestriction = new global::Speechkit.Stt.V3.LanguageRestrictionOptions();
            }
            input.ReadMessage(LanguageRestriction);
            break;
          }
          case 40: {
            AudioProcessingType = (global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
          case 18: {
            if (audioFormat_ == null) {
              AudioFormat = new global::Speechkit.Stt.V3.AudioFormatOptions();
            }
            input.ReadMessage(AudioFormat);
            break;
          }
          case 26: {
            if (textNormalization_ == null) {
              TextNormalization = new global::Speechkit.Stt.V3.TextNormalizationOptions();
            }
            input.ReadMessage(TextNormalization);
            break;
          }
          case 34: {
            if (languageRestriction_ == null) {
              LanguageRestriction = new global::Speechkit.Stt.V3.LanguageRestrictionOptions();
            }
            input.ReadMessage(LanguageRestriction);
            break;
          }
          case 40: {
            AudioProcessingType = (global::Speechkit.Stt.V3.RecognitionModelOptions.Types.AudioProcessingType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RecognitionModelOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AudioProcessingType {
        [pbr::OriginalName("AUDIO_PROCESSING_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Process audio in mode optimized for real-time recognition, i.e. send partials and final responses as soon as possible
        /// </summary>
        [pbr::OriginalName("REAL_TIME")] RealTime = 1,
        /// <summary>
        /// Process audio after all data was received
        /// </summary>
        [pbr::OriginalName("FULL_DATA")] FullData = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpeakerLabelingOptions : pb::IMessage<SpeakerLabelingOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpeakerLabelingOptions> _parser = new pb::MessageParser<SpeakerLabelingOptions>(() => new SpeakerLabelingOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpeakerLabelingOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeakerLabelingOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeakerLabelingOptions(SpeakerLabelingOptions other) : this() {
      speakerLabeling_ = other.speakerLabeling_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeakerLabelingOptions Clone() {
      return new SpeakerLabelingOptions(this);
    }

    /// <summary>Field number for the "speaker_labeling" field.</summary>
    public const int SpeakerLabelingFieldNumber = 1;
    private global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling speakerLabeling_ = global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling.Unspecified;
    /// <summary>
    /// Specifies the execution of speaker labeling. Default is SPEAKER_LABELING_DISABLED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling SpeakerLabeling {
      get { return speakerLabeling_; }
      set {
        speakerLabeling_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpeakerLabelingOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpeakerLabelingOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpeakerLabeling != other.SpeakerLabeling) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SpeakerLabeling != global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling.Unspecified) hash ^= SpeakerLabeling.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SpeakerLabeling != global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SpeakerLabeling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SpeakerLabeling != global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SpeakerLabeling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SpeakerLabeling != global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpeakerLabeling);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpeakerLabelingOptions other) {
      if (other == null) {
        return;
      }
      if (other.SpeakerLabeling != global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling.Unspecified) {
        SpeakerLabeling = other.SpeakerLabeling;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpeakerLabeling = (global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SpeakerLabeling = (global::Speechkit.Stt.V3.SpeakerLabelingOptions.Types.SpeakerLabeling) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpeakerLabelingOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum SpeakerLabeling {
        [pbr::OriginalName("SPEAKER_LABELING_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Enable speaker labeling
        /// </summary>
        [pbr::OriginalName("SPEAKER_LABELING_ENABLED")] Enabled = 1,
        /// <summary>
        /// Disable speaker labeling
        /// </summary>
        [pbr::OriginalName("SPEAKER_LABELING_DISABLED")] Disabled = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StreamingOptions : pb::IMessage<StreamingOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingOptions> _parser = new pb::MessageParser<StreamingOptions>(() => new StreamingOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingOptions(StreamingOptions other) : this() {
      recognitionModel_ = other.recognitionModel_ != null ? other.recognitionModel_.Clone() : null;
      eouClassifier_ = other.eouClassifier_ != null ? other.eouClassifier_.Clone() : null;
      recognitionClassifier_ = other.recognitionClassifier_ != null ? other.recognitionClassifier_.Clone() : null;
      speechAnalysis_ = other.speechAnalysis_ != null ? other.speechAnalysis_.Clone() : null;
      speakerLabeling_ = other.speakerLabeling_ != null ? other.speakerLabeling_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingOptions Clone() {
      return new StreamingOptions(this);
    }

    /// <summary>Field number for the "recognition_model" field.</summary>
    public const int RecognitionModelFieldNumber = 1;
    private global::Speechkit.Stt.V3.RecognitionModelOptions recognitionModel_;
    /// <summary>
    /// Configuration for speech recognition model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RecognitionModelOptions RecognitionModel {
      get { return recognitionModel_; }
      set {
        recognitionModel_ = value;
      }
    }

    /// <summary>Field number for the "eou_classifier" field.</summary>
    public const int EouClassifierFieldNumber = 2;
    private global::Speechkit.Stt.V3.EouClassifierOptions eouClassifier_;
    /// <summary>
    /// Configuration for end of utterance detection model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.EouClassifierOptions EouClassifier {
      get { return eouClassifier_; }
      set {
        eouClassifier_ = value;
      }
    }

    /// <summary>Field number for the "recognition_classifier" field.</summary>
    public const int RecognitionClassifierFieldNumber = 3;
    private global::Speechkit.Stt.V3.RecognitionClassifierOptions recognitionClassifier_;
    /// <summary>
    /// Configuration for classifiers over speech recognition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RecognitionClassifierOptions RecognitionClassifier {
      get { return recognitionClassifier_; }
      set {
        recognitionClassifier_ = value;
      }
    }

    /// <summary>Field number for the "speech_analysis" field.</summary>
    public const int SpeechAnalysisFieldNumber = 4;
    private global::Speechkit.Stt.V3.SpeechAnalysisOptions speechAnalysis_;
    /// <summary>
    /// Configuration for speech analysis over speech recognition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.SpeechAnalysisOptions SpeechAnalysis {
      get { return speechAnalysis_; }
      set {
        speechAnalysis_ = value;
      }
    }

    /// <summary>Field number for the "speaker_labeling" field.</summary>
    public const int SpeakerLabelingFieldNumber = 5;
    private global::Speechkit.Stt.V3.SpeakerLabelingOptions speakerLabeling_;
    /// <summary>
    /// Configuration for speaker labeling
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.SpeakerLabelingOptions SpeakerLabeling {
      get { return speakerLabeling_; }
      set {
        speakerLabeling_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RecognitionModel, other.RecognitionModel)) return false;
      if (!object.Equals(EouClassifier, other.EouClassifier)) return false;
      if (!object.Equals(RecognitionClassifier, other.RecognitionClassifier)) return false;
      if (!object.Equals(SpeechAnalysis, other.SpeechAnalysis)) return false;
      if (!object.Equals(SpeakerLabeling, other.SpeakerLabeling)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (recognitionModel_ != null) hash ^= RecognitionModel.GetHashCode();
      if (eouClassifier_ != null) hash ^= EouClassifier.GetHashCode();
      if (recognitionClassifier_ != null) hash ^= RecognitionClassifier.GetHashCode();
      if (speechAnalysis_ != null) hash ^= SpeechAnalysis.GetHashCode();
      if (speakerLabeling_ != null) hash ^= SpeakerLabeling.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (recognitionModel_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecognitionModel);
      }
      if (eouClassifier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EouClassifier);
      }
      if (recognitionClassifier_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RecognitionClassifier);
      }
      if (speechAnalysis_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SpeechAnalysis);
      }
      if (speakerLabeling_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpeakerLabeling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (recognitionModel_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecognitionModel);
      }
      if (eouClassifier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EouClassifier);
      }
      if (recognitionClassifier_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RecognitionClassifier);
      }
      if (speechAnalysis_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SpeechAnalysis);
      }
      if (speakerLabeling_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpeakerLabeling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (recognitionModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecognitionModel);
      }
      if (eouClassifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EouClassifier);
      }
      if (recognitionClassifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecognitionClassifier);
      }
      if (speechAnalysis_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpeechAnalysis);
      }
      if (speakerLabeling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpeakerLabeling);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingOptions other) {
      if (other == null) {
        return;
      }
      if (other.recognitionModel_ != null) {
        if (recognitionModel_ == null) {
          RecognitionModel = new global::Speechkit.Stt.V3.RecognitionModelOptions();
        }
        RecognitionModel.MergeFrom(other.RecognitionModel);
      }
      if (other.eouClassifier_ != null) {
        if (eouClassifier_ == null) {
          EouClassifier = new global::Speechkit.Stt.V3.EouClassifierOptions();
        }
        EouClassifier.MergeFrom(other.EouClassifier);
      }
      if (other.recognitionClassifier_ != null) {
        if (recognitionClassifier_ == null) {
          RecognitionClassifier = new global::Speechkit.Stt.V3.RecognitionClassifierOptions();
        }
        RecognitionClassifier.MergeFrom(other.RecognitionClassifier);
      }
      if (other.speechAnalysis_ != null) {
        if (speechAnalysis_ == null) {
          SpeechAnalysis = new global::Speechkit.Stt.V3.SpeechAnalysisOptions();
        }
        SpeechAnalysis.MergeFrom(other.SpeechAnalysis);
      }
      if (other.speakerLabeling_ != null) {
        if (speakerLabeling_ == null) {
          SpeakerLabeling = new global::Speechkit.Stt.V3.SpeakerLabelingOptions();
        }
        SpeakerLabeling.MergeFrom(other.SpeakerLabeling);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (recognitionModel_ == null) {
              RecognitionModel = new global::Speechkit.Stt.V3.RecognitionModelOptions();
            }
            input.ReadMessage(RecognitionModel);
            break;
          }
          case 18: {
            if (eouClassifier_ == null) {
              EouClassifier = new global::Speechkit.Stt.V3.EouClassifierOptions();
            }
            input.ReadMessage(EouClassifier);
            break;
          }
          case 26: {
            if (recognitionClassifier_ == null) {
              RecognitionClassifier = new global::Speechkit.Stt.V3.RecognitionClassifierOptions();
            }
            input.ReadMessage(RecognitionClassifier);
            break;
          }
          case 34: {
            if (speechAnalysis_ == null) {
              SpeechAnalysis = new global::Speechkit.Stt.V3.SpeechAnalysisOptions();
            }
            input.ReadMessage(SpeechAnalysis);
            break;
          }
          case 42: {
            if (speakerLabeling_ == null) {
              SpeakerLabeling = new global::Speechkit.Stt.V3.SpeakerLabelingOptions();
            }
            input.ReadMessage(SpeakerLabeling);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (recognitionModel_ == null) {
              RecognitionModel = new global::Speechkit.Stt.V3.RecognitionModelOptions();
            }
            input.ReadMessage(RecognitionModel);
            break;
          }
          case 18: {
            if (eouClassifier_ == null) {
              EouClassifier = new global::Speechkit.Stt.V3.EouClassifierOptions();
            }
            input.ReadMessage(EouClassifier);
            break;
          }
          case 26: {
            if (recognitionClassifier_ == null) {
              RecognitionClassifier = new global::Speechkit.Stt.V3.RecognitionClassifierOptions();
            }
            input.ReadMessage(RecognitionClassifier);
            break;
          }
          case 34: {
            if (speechAnalysis_ == null) {
              SpeechAnalysis = new global::Speechkit.Stt.V3.SpeechAnalysisOptions();
            }
            input.ReadMessage(SpeechAnalysis);
            break;
          }
          case 42: {
            if (speakerLabeling_ == null) {
              SpeakerLabeling = new global::Speechkit.Stt.V3.SpeakerLabelingOptions();
            }
            input.ReadMessage(SpeakerLabeling);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Data chunk with audio.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AudioChunk : pb::IMessage<AudioChunk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioChunk> _parser = new pb::MessageParser<AudioChunk>(() => new AudioChunk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioChunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioChunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioChunk(AudioChunk other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioChunk Clone() {
      return new AudioChunk(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// Bytes with audio data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioChunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioChunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioChunk other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Data chunk with silence.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SilenceChunk : pb::IMessage<SilenceChunk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SilenceChunk> _parser = new pb::MessageParser<SilenceChunk>(() => new SilenceChunk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SilenceChunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SilenceChunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SilenceChunk(SilenceChunk other) : this() {
      durationMs_ = other.durationMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SilenceChunk Clone() {
      return new SilenceChunk(this);
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 1;
    private long durationMs_;
    /// <summary>
    /// Duration of silence chunk in ms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DurationMs {
      get { return durationMs_; }
      set {
        durationMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SilenceChunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SilenceChunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DurationMs != other.DurationMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DurationMs != 0L) hash ^= DurationMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DurationMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DurationMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DurationMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DurationMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SilenceChunk other) {
      if (other == null) {
        return;
      }
      if (other.DurationMs != 0L) {
        DurationMs = other.DurationMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DurationMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DurationMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Force EOU
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Eou : pb::IMessage<Eou>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Eou> _parser = new pb::MessageParser<Eou>(() => new Eou());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Eou> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Eou() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Eou(Eou other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Eou Clone() {
      return new Eou(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Eou);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Eou other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Eou other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Streaming audio request
  /// Events are control messages from user.
  /// First message should be session options.
  /// The next messages are audio data chunks or control messages.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StreamingRequest : pb::IMessage<StreamingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingRequest> _parser = new pb::MessageParser<StreamingRequest>(() => new StreamingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequest(StreamingRequest other) : this() {
      switch (other.EventCase) {
        case EventOneofCase.SessionOptions:
          SessionOptions = other.SessionOptions.Clone();
          break;
        case EventOneofCase.Chunk:
          Chunk = other.Chunk.Clone();
          break;
        case EventOneofCase.SilenceChunk:
          SilenceChunk = other.SilenceChunk.Clone();
          break;
        case EventOneofCase.Eou:
          Eou = other.Eou.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequest Clone() {
      return new StreamingRequest(this);
    }

    /// <summary>Field number for the "session_options" field.</summary>
    public const int SessionOptionsFieldNumber = 1;
    /// <summary>
    /// Session options. Should be the first message from user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.StreamingOptions SessionOptions {
      get { return eventCase_ == EventOneofCase.SessionOptions ? (global::Speechkit.Stt.V3.StreamingOptions) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.SessionOptions;
      }
    }

    /// <summary>Field number for the "chunk" field.</summary>
    public const int ChunkFieldNumber = 2;
    /// <summary>
    /// Chunk with audio data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.AudioChunk Chunk {
      get { return eventCase_ == EventOneofCase.Chunk ? (global::Speechkit.Stt.V3.AudioChunk) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Chunk;
      }
    }

    /// <summary>Field number for the "silence_chunk" field.</summary>
    public const int SilenceChunkFieldNumber = 3;
    /// <summary>
    /// Chunk with silence.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.SilenceChunk SilenceChunk {
      get { return eventCase_ == EventOneofCase.SilenceChunk ? (global::Speechkit.Stt.V3.SilenceChunk) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.SilenceChunk;
      }
    }

    /// <summary>Field number for the "eou" field.</summary>
    public const int EouFieldNumber = 4;
    /// <summary>
    /// Request to end current utterance. Works only with external EOU detector.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.Eou Eou {
      get { return eventCase_ == EventOneofCase.Eou ? (global::Speechkit.Stt.V3.Eou) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Eou;
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "Event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      SessionOptions = 1,
      Chunk = 2,
      SilenceChunk = 3,
      Eou = 4,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SessionOptions, other.SessionOptions)) return false;
      if (!object.Equals(Chunk, other.Chunk)) return false;
      if (!object.Equals(SilenceChunk, other.SilenceChunk)) return false;
      if (!object.Equals(Eou, other.Eou)) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (eventCase_ == EventOneofCase.SessionOptions) hash ^= SessionOptions.GetHashCode();
      if (eventCase_ == EventOneofCase.Chunk) hash ^= Chunk.GetHashCode();
      if (eventCase_ == EventOneofCase.SilenceChunk) hash ^= SilenceChunk.GetHashCode();
      if (eventCase_ == EventOneofCase.Eou) hash ^= Eou.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventCase_ == EventOneofCase.SessionOptions) {
        output.WriteRawTag(10);
        output.WriteMessage(SessionOptions);
      }
      if (eventCase_ == EventOneofCase.Chunk) {
        output.WriteRawTag(18);
        output.WriteMessage(Chunk);
      }
      if (eventCase_ == EventOneofCase.SilenceChunk) {
        output.WriteRawTag(26);
        output.WriteMessage(SilenceChunk);
      }
      if (eventCase_ == EventOneofCase.Eou) {
        output.WriteRawTag(34);
        output.WriteMessage(Eou);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventCase_ == EventOneofCase.SessionOptions) {
        output.WriteRawTag(10);
        output.WriteMessage(SessionOptions);
      }
      if (eventCase_ == EventOneofCase.Chunk) {
        output.WriteRawTag(18);
        output.WriteMessage(Chunk);
      }
      if (eventCase_ == EventOneofCase.SilenceChunk) {
        output.WriteRawTag(26);
        output.WriteMessage(SilenceChunk);
      }
      if (eventCase_ == EventOneofCase.Eou) {
        output.WriteRawTag(34);
        output.WriteMessage(Eou);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (eventCase_ == EventOneofCase.SessionOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionOptions);
      }
      if (eventCase_ == EventOneofCase.Chunk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chunk);
      }
      if (eventCase_ == EventOneofCase.SilenceChunk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SilenceChunk);
      }
      if (eventCase_ == EventOneofCase.Eou) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Eou);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingRequest other) {
      if (other == null) {
        return;
      }
      switch (other.EventCase) {
        case EventOneofCase.SessionOptions:
          if (SessionOptions == null) {
            SessionOptions = new global::Speechkit.Stt.V3.StreamingOptions();
          }
          SessionOptions.MergeFrom(other.SessionOptions);
          break;
        case EventOneofCase.Chunk:
          if (Chunk == null) {
            Chunk = new global::Speechkit.Stt.V3.AudioChunk();
          }
          Chunk.MergeFrom(other.Chunk);
          break;
        case EventOneofCase.SilenceChunk:
          if (SilenceChunk == null) {
            SilenceChunk = new global::Speechkit.Stt.V3.SilenceChunk();
          }
          SilenceChunk.MergeFrom(other.SilenceChunk);
          break;
        case EventOneofCase.Eou:
          if (Eou == null) {
            Eou = new global::Speechkit.Stt.V3.Eou();
          }
          Eou.MergeFrom(other.Eou);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Speechkit.Stt.V3.StreamingOptions subBuilder = new global::Speechkit.Stt.V3.StreamingOptions();
            if (eventCase_ == EventOneofCase.SessionOptions) {
              subBuilder.MergeFrom(SessionOptions);
            }
            input.ReadMessage(subBuilder);
            SessionOptions = subBuilder;
            break;
          }
          case 18: {
            global::Speechkit.Stt.V3.AudioChunk subBuilder = new global::Speechkit.Stt.V3.AudioChunk();
            if (eventCase_ == EventOneofCase.Chunk) {
              subBuilder.MergeFrom(Chunk);
            }
            input.ReadMessage(subBuilder);
            Chunk = subBuilder;
            break;
          }
          case 26: {
            global::Speechkit.Stt.V3.SilenceChunk subBuilder = new global::Speechkit.Stt.V3.SilenceChunk();
            if (eventCase_ == EventOneofCase.SilenceChunk) {
              subBuilder.MergeFrom(SilenceChunk);
            }
            input.ReadMessage(subBuilder);
            SilenceChunk = subBuilder;
            break;
          }
          case 34: {
            global::Speechkit.Stt.V3.Eou subBuilder = new global::Speechkit.Stt.V3.Eou();
            if (eventCase_ == EventOneofCase.Eou) {
              subBuilder.MergeFrom(Eou);
            }
            input.ReadMessage(subBuilder);
            Eou = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Speechkit.Stt.V3.StreamingOptions subBuilder = new global::Speechkit.Stt.V3.StreamingOptions();
            if (eventCase_ == EventOneofCase.SessionOptions) {
              subBuilder.MergeFrom(SessionOptions);
            }
            input.ReadMessage(subBuilder);
            SessionOptions = subBuilder;
            break;
          }
          case 18: {
            global::Speechkit.Stt.V3.AudioChunk subBuilder = new global::Speechkit.Stt.V3.AudioChunk();
            if (eventCase_ == EventOneofCase.Chunk) {
              subBuilder.MergeFrom(Chunk);
            }
            input.ReadMessage(subBuilder);
            Chunk = subBuilder;
            break;
          }
          case 26: {
            global::Speechkit.Stt.V3.SilenceChunk subBuilder = new global::Speechkit.Stt.V3.SilenceChunk();
            if (eventCase_ == EventOneofCase.SilenceChunk) {
              subBuilder.MergeFrom(SilenceChunk);
            }
            input.ReadMessage(subBuilder);
            SilenceChunk = subBuilder;
            break;
          }
          case 34: {
            global::Speechkit.Stt.V3.Eou subBuilder = new global::Speechkit.Stt.V3.Eou();
            if (eventCase_ == EventOneofCase.Eou) {
              subBuilder.MergeFrom(Eou);
            }
            input.ReadMessage(subBuilder);
            Eou = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RecognizeFileRequest : pb::IMessage<RecognizeFileRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecognizeFileRequest> _parser = new pb::MessageParser<RecognizeFileRequest>(() => new RecognizeFileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecognizeFileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognizeFileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognizeFileRequest(RecognizeFileRequest other) : this() {
      recognitionModel_ = other.recognitionModel_ != null ? other.recognitionModel_.Clone() : null;
      recognitionClassifier_ = other.recognitionClassifier_ != null ? other.recognitionClassifier_.Clone() : null;
      speechAnalysis_ = other.speechAnalysis_ != null ? other.speechAnalysis_.Clone() : null;
      switch (other.AudioSourceCase) {
        case AudioSourceOneofCase.Content:
          Content = other.Content;
          break;
        case AudioSourceOneofCase.Uri:
          Uri = other.Uri;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognizeFileRequest Clone() {
      return new RecognizeFileRequest(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    /// <summary>
    /// Bytes with data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Content {
      get { return HasContent ? (pb::ByteString) audioSource_ : pb::ByteString.Empty; }
      set {
        audioSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        audioSourceCase_ = AudioSourceOneofCase.Content;
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContent {
      get { return audioSourceCase_ == AudioSourceOneofCase.Content; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "content" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContent() {
      if (HasContent) {
        ClearAudioSource();
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 2;
    /// <summary>
    /// S3 data url
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uri {
      get { return HasUri ? (string) audioSource_ : ""; }
      set {
        audioSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        audioSourceCase_ = AudioSourceOneofCase.Uri;
      }
    }
    /// <summary>Gets whether the "uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUri {
      get { return audioSourceCase_ == AudioSourceOneofCase.Uri; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "uri" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUri() {
      if (HasUri) {
        ClearAudioSource();
      }
    }

    /// <summary>Field number for the "recognition_model" field.</summary>
    public const int RecognitionModelFieldNumber = 3;
    private global::Speechkit.Stt.V3.RecognitionModelOptions recognitionModel_;
    /// <summary>
    /// Configuration for speech recognition model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RecognitionModelOptions RecognitionModel {
      get { return recognitionModel_; }
      set {
        recognitionModel_ = value;
      }
    }

    /// <summary>Field number for the "recognition_classifier" field.</summary>
    public const int RecognitionClassifierFieldNumber = 4;
    private global::Speechkit.Stt.V3.RecognitionClassifierOptions recognitionClassifier_;
    /// <summary>
    /// Configuration for classifiers over speech recognition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RecognitionClassifierOptions RecognitionClassifier {
      get { return recognitionClassifier_; }
      set {
        recognitionClassifier_ = value;
      }
    }

    /// <summary>Field number for the "speech_analysis" field.</summary>
    public const int SpeechAnalysisFieldNumber = 5;
    private global::Speechkit.Stt.V3.SpeechAnalysisOptions speechAnalysis_;
    /// <summary>
    /// Configuration for speech analysis over speech recognition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.SpeechAnalysisOptions SpeechAnalysis {
      get { return speechAnalysis_; }
      set {
        speechAnalysis_ = value;
      }
    }

    private object audioSource_;
    /// <summary>Enum of possible cases for the "AudioSource" oneof.</summary>
    public enum AudioSourceOneofCase {
      None = 0,
      Content = 1,
      Uri = 2,
    }
    private AudioSourceOneofCase audioSourceCase_ = AudioSourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioSourceOneofCase AudioSourceCase {
      get { return audioSourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioSource() {
      audioSourceCase_ = AudioSourceOneofCase.None;
      audioSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecognizeFileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecognizeFileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (Uri != other.Uri) return false;
      if (!object.Equals(RecognitionModel, other.RecognitionModel)) return false;
      if (!object.Equals(RecognitionClassifier, other.RecognitionClassifier)) return false;
      if (!object.Equals(SpeechAnalysis, other.SpeechAnalysis)) return false;
      if (AudioSourceCase != other.AudioSourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasContent) hash ^= Content.GetHashCode();
      if (HasUri) hash ^= Uri.GetHashCode();
      if (recognitionModel_ != null) hash ^= RecognitionModel.GetHashCode();
      if (recognitionClassifier_ != null) hash ^= RecognitionClassifier.GetHashCode();
      if (speechAnalysis_ != null) hash ^= SpeechAnalysis.GetHashCode();
      hash ^= (int) audioSourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasContent) {
        output.WriteRawTag(10);
        output.WriteBytes(Content);
      }
      if (HasUri) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (recognitionModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RecognitionModel);
      }
      if (recognitionClassifier_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RecognitionClassifier);
      }
      if (speechAnalysis_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpeechAnalysis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasContent) {
        output.WriteRawTag(10);
        output.WriteBytes(Content);
      }
      if (HasUri) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (recognitionModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RecognitionModel);
      }
      if (recognitionClassifier_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RecognitionClassifier);
      }
      if (speechAnalysis_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpeechAnalysis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (HasUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (recognitionModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecognitionModel);
      }
      if (recognitionClassifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecognitionClassifier);
      }
      if (speechAnalysis_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpeechAnalysis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecognizeFileRequest other) {
      if (other == null) {
        return;
      }
      if (other.recognitionModel_ != null) {
        if (recognitionModel_ == null) {
          RecognitionModel = new global::Speechkit.Stt.V3.RecognitionModelOptions();
        }
        RecognitionModel.MergeFrom(other.RecognitionModel);
      }
      if (other.recognitionClassifier_ != null) {
        if (recognitionClassifier_ == null) {
          RecognitionClassifier = new global::Speechkit.Stt.V3.RecognitionClassifierOptions();
        }
        RecognitionClassifier.MergeFrom(other.RecognitionClassifier);
      }
      if (other.speechAnalysis_ != null) {
        if (speechAnalysis_ == null) {
          SpeechAnalysis = new global::Speechkit.Stt.V3.SpeechAnalysisOptions();
        }
        SpeechAnalysis.MergeFrom(other.SpeechAnalysis);
      }
      switch (other.AudioSourceCase) {
        case AudioSourceOneofCase.Content:
          Content = other.Content;
          break;
        case AudioSourceOneofCase.Uri:
          Uri = other.Uri;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadBytes();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 26: {
            if (recognitionModel_ == null) {
              RecognitionModel = new global::Speechkit.Stt.V3.RecognitionModelOptions();
            }
            input.ReadMessage(RecognitionModel);
            break;
          }
          case 34: {
            if (recognitionClassifier_ == null) {
              RecognitionClassifier = new global::Speechkit.Stt.V3.RecognitionClassifierOptions();
            }
            input.ReadMessage(RecognitionClassifier);
            break;
          }
          case 42: {
            if (speechAnalysis_ == null) {
              SpeechAnalysis = new global::Speechkit.Stt.V3.SpeechAnalysisOptions();
            }
            input.ReadMessage(SpeechAnalysis);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Content = input.ReadBytes();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 26: {
            if (recognitionModel_ == null) {
              RecognitionModel = new global::Speechkit.Stt.V3.RecognitionModelOptions();
            }
            input.ReadMessage(RecognitionModel);
            break;
          }
          case 34: {
            if (recognitionClassifier_ == null) {
              RecognitionClassifier = new global::Speechkit.Stt.V3.RecognitionClassifierOptions();
            }
            input.ReadMessage(RecognitionClassifier);
            break;
          }
          case 42: {
            if (speechAnalysis_ == null) {
              SpeechAnalysis = new global::Speechkit.Stt.V3.SpeechAnalysisOptions();
            }
            input.ReadMessage(SpeechAnalysis);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Recognized word.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Word : pb::IMessage<Word>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Word> _parser = new pb::MessageParser<Word>(() => new Word());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Word> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Word() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Word(Word other) : this() {
      text_ = other.text_;
      startTimeMs_ = other.startTimeMs_;
      endTimeMs_ = other.endTimeMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Word Clone() {
      return new Word(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    /// <summary>
    /// Word text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time_ms" field.</summary>
    public const int StartTimeMsFieldNumber = 2;
    private long startTimeMs_;
    /// <summary>
    /// Estimation of word start time in ms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimeMs {
      get { return startTimeMs_; }
      set {
        startTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "end_time_ms" field.</summary>
    public const int EndTimeMsFieldNumber = 3;
    private long endTimeMs_;
    /// <summary>
    /// Estimation of word end time in ms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTimeMs {
      get { return endTimeMs_; }
      set {
        endTimeMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Word);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Word other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (StartTimeMs != other.StartTimeMs) return false;
      if (EndTimeMs != other.EndTimeMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (StartTimeMs != 0L) hash ^= StartTimeMs.GetHashCode();
      if (EndTimeMs != 0L) hash ^= EndTimeMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (StartTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimeMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Word other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.StartTimeMs != 0L) {
        StartTimeMs = other.StartTimeMs;
      }
      if (other.EndTimeMs != 0L) {
        EndTimeMs = other.EndTimeMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 16: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            EndTimeMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 16: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            EndTimeMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Estimation of language and its probability.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LanguageEstimation : pb::IMessage<LanguageEstimation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LanguageEstimation> _parser = new pb::MessageParser<LanguageEstimation>(() => new LanguageEstimation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LanguageEstimation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LanguageEstimation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LanguageEstimation(LanguageEstimation other) : this() {
      languageCode_ = other.languageCode_;
      probability_ = other.probability_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LanguageEstimation Clone() {
      return new LanguageEstimation(this);
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 1;
    private string languageCode_ = "";
    /// <summary>
    /// Language code in ISO 639-1 format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "probability" field.</summary>
    public const int ProbabilityFieldNumber = 2;
    private double probability_;
    /// <summary>
    /// Estimation of language probability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Probability {
      get { return probability_; }
      set {
        probability_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LanguageEstimation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LanguageEstimation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LanguageCode != other.LanguageCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Probability, other.Probability)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (Probability != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Probability);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (Probability != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Probability);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (Probability != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Probability);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (Probability != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LanguageEstimation other) {
      if (other == null) {
        return;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      if (other.Probability != 0D) {
        Probability = other.Probability;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 17: {
            Probability = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 17: {
            Probability = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Recognition of specific time frame.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Alternative : pb::IMessage<Alternative>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Alternative> _parser = new pb::MessageParser<Alternative>(() => new Alternative());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Alternative> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Alternative() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Alternative(Alternative other) : this() {
      words_ = other.words_.Clone();
      text_ = other.text_;
      startTimeMs_ = other.startTimeMs_;
      endTimeMs_ = other.endTimeMs_;
      confidence_ = other.confidence_;
      languages_ = other.languages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Alternative Clone() {
      return new Alternative(this);
    }

    /// <summary>Field number for the "words" field.</summary>
    public const int WordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.Word> _repeated_words_codec
        = pb::FieldCodec.ForMessage(10, global::Speechkit.Stt.V3.Word.Parser);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.Word> words_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.Word>();
    /// <summary>
    /// Words in time frame.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.Word> Words {
      get { return words_; }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    /// <summary>
    /// Text in time frame.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time_ms" field.</summary>
    public const int StartTimeMsFieldNumber = 3;
    private long startTimeMs_;
    /// <summary>
    /// Start of time frame.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimeMs {
      get { return startTimeMs_; }
      set {
        startTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "end_time_ms" field.</summary>
    public const int EndTimeMsFieldNumber = 4;
    private long endTimeMs_;
    /// <summary>
    /// End of time frame.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTimeMs {
      get { return endTimeMs_; }
      set {
        endTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 5;
    private double confidence_;
    /// <summary>
    /// The hypothesis confidence. Currently is not used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    /// <summary>Field number for the "languages" field.</summary>
    public const int LanguagesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.LanguageEstimation> _repeated_languages_codec
        = pb::FieldCodec.ForMessage(50, global::Speechkit.Stt.V3.LanguageEstimation.Parser);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.LanguageEstimation> languages_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.LanguageEstimation>();
    /// <summary>
    /// Distribution over possible languages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.LanguageEstimation> Languages {
      get { return languages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Alternative);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Alternative other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!words_.Equals(other.words_)) return false;
      if (Text != other.Text) return false;
      if (StartTimeMs != other.StartTimeMs) return false;
      if (EndTimeMs != other.EndTimeMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      if(!languages_.Equals(other.languages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= words_.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (StartTimeMs != 0L) hash ^= StartTimeMs.GetHashCode();
      if (EndTimeMs != 0L) hash ^= EndTimeMs.GetHashCode();
      if (Confidence != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Confidence);
      hash ^= languages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      words_.WriteTo(output, _repeated_words_codec);
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTimeMs);
      }
      if (Confidence != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Confidence);
      }
      languages_.WriteTo(output, _repeated_languages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      words_.WriteTo(ref output, _repeated_words_codec);
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTimeMs);
      }
      if (Confidence != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Confidence);
      }
      languages_.WriteTo(ref output, _repeated_languages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += words_.CalculateSize(_repeated_words_codec);
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (StartTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimeMs);
      }
      if (Confidence != 0D) {
        size += 1 + 8;
      }
      size += languages_.CalculateSize(_repeated_languages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Alternative other) {
      if (other == null) {
        return;
      }
      words_.Add(other.words_);
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.StartTimeMs != 0L) {
        StartTimeMs = other.StartTimeMs;
      }
      if (other.EndTimeMs != 0L) {
        EndTimeMs = other.EndTimeMs;
      }
      if (other.Confidence != 0D) {
        Confidence = other.Confidence;
      }
      languages_.Add(other.languages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            words_.AddEntriesFrom(input, _repeated_words_codec);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 32: {
            EndTimeMs = input.ReadInt64();
            break;
          }
          case 41: {
            Confidence = input.ReadDouble();
            break;
          }
          case 50: {
            languages_.AddEntriesFrom(input, _repeated_languages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            words_.AddEntriesFrom(ref input, _repeated_words_codec);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 32: {
            EndTimeMs = input.ReadInt64();
            break;
          }
          case 41: {
            Confidence = input.ReadDouble();
            break;
          }
          case 50: {
            languages_.AddEntriesFrom(ref input, _repeated_languages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Update information for external End of Utterance.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EouUpdate : pb::IMessage<EouUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EouUpdate> _parser = new pb::MessageParser<EouUpdate>(() => new EouUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EouUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EouUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EouUpdate(EouUpdate other) : this() {
      timeMs_ = other.timeMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EouUpdate Clone() {
      return new EouUpdate(this);
    }

    /// <summary>Field number for the "time_ms" field.</summary>
    public const int TimeMsFieldNumber = 2;
    private long timeMs_;
    /// <summary>
    /// EOU estimated time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeMs {
      get { return timeMs_; }
      set {
        timeMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EouUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EouUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeMs != other.TimeMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeMs != 0L) hash ^= TimeMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EouUpdate other) {
      if (other == null) {
        return;
      }
      if (other.TimeMs != 0L) {
        TimeMs = other.TimeMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            TimeMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            TimeMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Update of hypothesis.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AlternativeUpdate : pb::IMessage<AlternativeUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlternativeUpdate> _parser = new pb::MessageParser<AlternativeUpdate>(() => new AlternativeUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AlternativeUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlternativeUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlternativeUpdate(AlternativeUpdate other) : this() {
      alternatives_ = other.alternatives_.Clone();
      channelTag_ = other.channelTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlternativeUpdate Clone() {
      return new AlternativeUpdate(this);
    }

    /// <summary>Field number for the "alternatives" field.</summary>
    public const int AlternativesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.Alternative> _repeated_alternatives_codec
        = pb::FieldCodec.ForMessage(10, global::Speechkit.Stt.V3.Alternative.Parser);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.Alternative> alternatives_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.Alternative>();
    /// <summary>
    /// List of hypothesis for timeframes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.Alternative> Alternatives {
      get { return alternatives_; }
    }

    /// <summary>Field number for the "channel_tag" field.</summary>
    public const int ChannelTagFieldNumber = 2;
    private string channelTag_ = "";
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChannelTag {
      get { return channelTag_; }
      set {
        channelTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AlternativeUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AlternativeUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!alternatives_.Equals(other.alternatives_)) return false;
      if (ChannelTag != other.ChannelTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= alternatives_.GetHashCode();
      if (ChannelTag.Length != 0) hash ^= ChannelTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      alternatives_.WriteTo(output, _repeated_alternatives_codec);
      if (ChannelTag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChannelTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      alternatives_.WriteTo(ref output, _repeated_alternatives_codec);
      if (ChannelTag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChannelTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += alternatives_.CalculateSize(_repeated_alternatives_codec);
      if (ChannelTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AlternativeUpdate other) {
      if (other == null) {
        return;
      }
      alternatives_.Add(other.alternatives_);
      if (other.ChannelTag.Length != 0) {
        ChannelTag = other.ChannelTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            alternatives_.AddEntriesFrom(input, _repeated_alternatives_codec);
            break;
          }
          case 18: {
            ChannelTag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            alternatives_.AddEntriesFrom(ref input, _repeated_alternatives_codec);
            break;
          }
          case 18: {
            ChannelTag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AudioCursors are state of ASR recognition stream.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AudioCursors : pb::IMessage<AudioCursors>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioCursors> _parser = new pb::MessageParser<AudioCursors>(() => new AudioCursors());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioCursors> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioCursors() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioCursors(AudioCursors other) : this() {
      receivedDataMs_ = other.receivedDataMs_;
      resetTimeMs_ = other.resetTimeMs_;
      partialTimeMs_ = other.partialTimeMs_;
      finalTimeMs_ = other.finalTimeMs_;
      finalIndex_ = other.finalIndex_;
      eouTimeMs_ = other.eouTimeMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioCursors Clone() {
      return new AudioCursors(this);
    }

    /// <summary>Field number for the "received_data_ms" field.</summary>
    public const int ReceivedDataMsFieldNumber = 1;
    private long receivedDataMs_;
    /// <summary>
    /// Amount of audio chunks server received. This cursor is moved after each audio chunk was received by server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReceivedDataMs {
      get { return receivedDataMs_; }
      set {
        receivedDataMs_ = value;
      }
    }

    /// <summary>Field number for the "reset_time_ms" field.</summary>
    public const int ResetTimeMsFieldNumber = 2;
    private long resetTimeMs_;
    /// <summary>
    /// Input stream reset data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ResetTimeMs {
      get { return resetTimeMs_; }
      set {
        resetTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "partial_time_ms" field.</summary>
    public const int PartialTimeMsFieldNumber = 3;
    private long partialTimeMs_;
    /// <summary>
    /// How much audio was processed. This time includes trimming silences as well. This cursor is moved after server received enough data
    /// to update recognition results (includes silence as well).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PartialTimeMs {
      get { return partialTimeMs_; }
      set {
        partialTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "final_time_ms" field.</summary>
    public const int FinalTimeMsFieldNumber = 4;
    private long finalTimeMs_;
    /// <summary>
    /// Time of last final. This cursor is moved when server decides that recognition from start of audio until final_time_ms will not change anymore
    /// usually this even is followed by EOU detection (but this could change in future).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FinalTimeMs {
      get { return finalTimeMs_; }
      set {
        finalTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "final_index" field.</summary>
    public const int FinalIndexFieldNumber = 5;
    private long finalIndex_;
    /// <summary>
    /// This is index of last final server send. Incremented after each new final.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FinalIndex {
      get { return finalIndex_; }
      set {
        finalIndex_ = value;
      }
    }

    /// <summary>Field number for the "eou_time_ms" field.</summary>
    public const int EouTimeMsFieldNumber = 6;
    private long eouTimeMs_;
    /// <summary>
    /// Estimated time of EOU. Cursor is updated after each new EOU is sent.
    /// For external classifier this equals to received_data_ms at the moment EOU event arrives.
    /// For internal classifier this is estimation of time. The time is not exact and has the same guarantees as word timings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EouTimeMs {
      get { return eouTimeMs_; }
      set {
        eouTimeMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioCursors);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioCursors other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceivedDataMs != other.ReceivedDataMs) return false;
      if (ResetTimeMs != other.ResetTimeMs) return false;
      if (PartialTimeMs != other.PartialTimeMs) return false;
      if (FinalTimeMs != other.FinalTimeMs) return false;
      if (FinalIndex != other.FinalIndex) return false;
      if (EouTimeMs != other.EouTimeMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceivedDataMs != 0L) hash ^= ReceivedDataMs.GetHashCode();
      if (ResetTimeMs != 0L) hash ^= ResetTimeMs.GetHashCode();
      if (PartialTimeMs != 0L) hash ^= PartialTimeMs.GetHashCode();
      if (FinalTimeMs != 0L) hash ^= FinalTimeMs.GetHashCode();
      if (FinalIndex != 0L) hash ^= FinalIndex.GetHashCode();
      if (EouTimeMs != 0L) hash ^= EouTimeMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReceivedDataMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ReceivedDataMs);
      }
      if (ResetTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ResetTimeMs);
      }
      if (PartialTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PartialTimeMs);
      }
      if (FinalTimeMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(FinalTimeMs);
      }
      if (FinalIndex != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FinalIndex);
      }
      if (EouTimeMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(EouTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReceivedDataMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ReceivedDataMs);
      }
      if (ResetTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ResetTimeMs);
      }
      if (PartialTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PartialTimeMs);
      }
      if (FinalTimeMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(FinalTimeMs);
      }
      if (FinalIndex != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FinalIndex);
      }
      if (EouTimeMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(EouTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ReceivedDataMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceivedDataMs);
      }
      if (ResetTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ResetTimeMs);
      }
      if (PartialTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartialTimeMs);
      }
      if (FinalTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FinalTimeMs);
      }
      if (FinalIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FinalIndex);
      }
      if (EouTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EouTimeMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioCursors other) {
      if (other == null) {
        return;
      }
      if (other.ReceivedDataMs != 0L) {
        ReceivedDataMs = other.ReceivedDataMs;
      }
      if (other.ResetTimeMs != 0L) {
        ResetTimeMs = other.ResetTimeMs;
      }
      if (other.PartialTimeMs != 0L) {
        PartialTimeMs = other.PartialTimeMs;
      }
      if (other.FinalTimeMs != 0L) {
        FinalTimeMs = other.FinalTimeMs;
      }
      if (other.FinalIndex != 0L) {
        FinalIndex = other.FinalIndex;
      }
      if (other.EouTimeMs != 0L) {
        EouTimeMs = other.EouTimeMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceivedDataMs = input.ReadInt64();
            break;
          }
          case 16: {
            ResetTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            PartialTimeMs = input.ReadInt64();
            break;
          }
          case 32: {
            FinalTimeMs = input.ReadInt64();
            break;
          }
          case 40: {
            FinalIndex = input.ReadInt64();
            break;
          }
          case 48: {
            EouTimeMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReceivedDataMs = input.ReadInt64();
            break;
          }
          case 16: {
            ResetTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            PartialTimeMs = input.ReadInt64();
            break;
          }
          case 32: {
            FinalTimeMs = input.ReadInt64();
            break;
          }
          case 40: {
            FinalIndex = input.ReadInt64();
            break;
          }
          case 48: {
            EouTimeMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Refinement for final hypo. For example, text normalization is refinement.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FinalRefinement : pb::IMessage<FinalRefinement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FinalRefinement> _parser = new pb::MessageParser<FinalRefinement>(() => new FinalRefinement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FinalRefinement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FinalRefinement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FinalRefinement(FinalRefinement other) : this() {
      finalIndex_ = other.finalIndex_;
      switch (other.TypeCase) {
        case TypeOneofCase.NormalizedText:
          NormalizedText = other.NormalizedText.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FinalRefinement Clone() {
      return new FinalRefinement(this);
    }

    /// <summary>Field number for the "final_index" field.</summary>
    public const int FinalIndexFieldNumber = 1;
    private long finalIndex_;
    /// <summary>
    /// Index of final for which server sends additional information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FinalIndex {
      get { return finalIndex_; }
      set {
        finalIndex_ = value;
      }
    }

    /// <summary>Field number for the "normalized_text" field.</summary>
    public const int NormalizedTextFieldNumber = 2;
    /// <summary>
    /// Normalized text instead of raw one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.AlternativeUpdate NormalizedText {
      get { return typeCase_ == TypeOneofCase.NormalizedText ? (global::Speechkit.Stt.V3.AlternativeUpdate) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.NormalizedText;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      NormalizedText = 2,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FinalRefinement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FinalRefinement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FinalIndex != other.FinalIndex) return false;
      if (!object.Equals(NormalizedText, other.NormalizedText)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FinalIndex != 0L) hash ^= FinalIndex.GetHashCode();
      if (typeCase_ == TypeOneofCase.NormalizedText) hash ^= NormalizedText.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FinalIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FinalIndex);
      }
      if (typeCase_ == TypeOneofCase.NormalizedText) {
        output.WriteRawTag(18);
        output.WriteMessage(NormalizedText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FinalIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FinalIndex);
      }
      if (typeCase_ == TypeOneofCase.NormalizedText) {
        output.WriteRawTag(18);
        output.WriteMessage(NormalizedText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FinalIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FinalIndex);
      }
      if (typeCase_ == TypeOneofCase.NormalizedText) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalizedText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FinalRefinement other) {
      if (other == null) {
        return;
      }
      if (other.FinalIndex != 0L) {
        FinalIndex = other.FinalIndex;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.NormalizedText:
          if (NormalizedText == null) {
            NormalizedText = new global::Speechkit.Stt.V3.AlternativeUpdate();
          }
          NormalizedText.MergeFrom(other.NormalizedText);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FinalIndex = input.ReadInt64();
            break;
          }
          case 18: {
            global::Speechkit.Stt.V3.AlternativeUpdate subBuilder = new global::Speechkit.Stt.V3.AlternativeUpdate();
            if (typeCase_ == TypeOneofCase.NormalizedText) {
              subBuilder.MergeFrom(NormalizedText);
            }
            input.ReadMessage(subBuilder);
            NormalizedText = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FinalIndex = input.ReadInt64();
            break;
          }
          case 18: {
            global::Speechkit.Stt.V3.AlternativeUpdate subBuilder = new global::Speechkit.Stt.V3.AlternativeUpdate();
            if (typeCase_ == TypeOneofCase.NormalizedText) {
              subBuilder.MergeFrom(NormalizedText);
            }
            input.ReadMessage(subBuilder);
            NormalizedText = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Status message
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StatusCode : pb::IMessage<StatusCode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatusCode> _parser = new pb::MessageParser<StatusCode>(() => new StatusCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StatusCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatusCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatusCode(StatusCode other) : this() {
      codeType_ = other.codeType_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatusCode Clone() {
      return new StatusCode(this);
    }

    /// <summary>Field number for the "code_type" field.</summary>
    public const int CodeTypeFieldNumber = 1;
    private global::Speechkit.Stt.V3.CodeType codeType_ = global::Speechkit.Stt.V3.CodeType.Unspecified;
    /// <summary>
    /// Code type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.CodeType CodeType {
      get { return codeType_; }
      set {
        codeType_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// Human readable message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StatusCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StatusCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CodeType != other.CodeType) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CodeType != global::Speechkit.Stt.V3.CodeType.Unspecified) hash ^= CodeType.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CodeType != global::Speechkit.Stt.V3.CodeType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CodeType);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CodeType != global::Speechkit.Stt.V3.CodeType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CodeType);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CodeType != global::Speechkit.Stt.V3.CodeType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CodeType);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StatusCode other) {
      if (other == null) {
        return;
      }
      if (other.CodeType != global::Speechkit.Stt.V3.CodeType.Unspecified) {
        CodeType = other.CodeType;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CodeType = (global::Speechkit.Stt.V3.CodeType) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CodeType = (global::Speechkit.Stt.V3.CodeType) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Session identifier.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SessionUuid : pb::IMessage<SessionUuid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionUuid> _parser = new pb::MessageParser<SessionUuid>(() => new SessionUuid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SessionUuid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SessionUuid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SessionUuid(SessionUuid other) : this() {
      uuid_ = other.uuid_;
      userRequestId_ = other.userRequestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SessionUuid Clone() {
      return new SessionUuid(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    /// <summary>
    /// Internal session identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_request_id" field.</summary>
    public const int UserRequestIdFieldNumber = 2;
    private string userRequestId_ = "";
    /// <summary>
    /// User session identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserRequestId {
      get { return userRequestId_; }
      set {
        userRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SessionUuid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SessionUuid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (UserRequestId != other.UserRequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (UserRequestId.Length != 0) hash ^= UserRequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (UserRequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserRequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (UserRequestId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserRequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (UserRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserRequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SessionUuid other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.UserRequestId.Length != 0) {
        UserRequestId = other.UserRequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            UserRequestId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            UserRequestId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PhraseHighlight : pb::IMessage<PhraseHighlight>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PhraseHighlight> _parser = new pb::MessageParser<PhraseHighlight>(() => new PhraseHighlight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PhraseHighlight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhraseHighlight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhraseHighlight(PhraseHighlight other) : this() {
      text_ = other.text_;
      startTimeMs_ = other.startTimeMs_;
      endTimeMs_ = other.endTimeMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PhraseHighlight Clone() {
      return new PhraseHighlight(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    /// <summary>
    /// Text transcription of the highlighted audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time_ms" field.</summary>
    public const int StartTimeMsFieldNumber = 2;
    private long startTimeMs_;
    /// <summary>
    /// Start time of the highlighted audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimeMs {
      get { return startTimeMs_; }
      set {
        startTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "end_time_ms" field.</summary>
    public const int EndTimeMsFieldNumber = 3;
    private long endTimeMs_;
    /// <summary>
    /// End time of the highlighted audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTimeMs {
      get { return endTimeMs_; }
      set {
        endTimeMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PhraseHighlight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PhraseHighlight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (StartTimeMs != other.StartTimeMs) return false;
      if (EndTimeMs != other.EndTimeMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (StartTimeMs != 0L) hash ^= StartTimeMs.GetHashCode();
      if (EndTimeMs != 0L) hash ^= EndTimeMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (StartTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimeMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PhraseHighlight other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.StartTimeMs != 0L) {
        StartTimeMs = other.StartTimeMs;
      }
      if (other.EndTimeMs != 0L) {
        EndTimeMs = other.EndTimeMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 16: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            EndTimeMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 16: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            EndTimeMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RecognitionClassifierLabel : pb::IMessage<RecognitionClassifierLabel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecognitionClassifierLabel> _parser = new pb::MessageParser<RecognitionClassifierLabel>(() => new RecognitionClassifierLabel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecognitionClassifierLabel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierLabel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierLabel(RecognitionClassifierLabel other) : this() {
      label_ = other.label_;
      confidence_ = other.confidence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierLabel Clone() {
      return new RecognitionClassifierLabel(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    /// <summary>
    /// The label of the class predicted by the classifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 2;
    private double confidence_;
    /// <summary>
    /// The prediction confidence
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecognitionClassifierLabel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecognitionClassifierLabel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (Confidence != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Confidence);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (Confidence != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Confidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (Confidence != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Confidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (Confidence != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecognitionClassifierLabel other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.Confidence != 0D) {
        Confidence = other.Confidence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 17: {
            Confidence = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 17: {
            Confidence = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RecognitionClassifierResult : pb::IMessage<RecognitionClassifierResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecognitionClassifierResult> _parser = new pb::MessageParser<RecognitionClassifierResult>(() => new RecognitionClassifierResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecognitionClassifierResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierResult(RecognitionClassifierResult other) : this() {
      classifier_ = other.classifier_;
      highlights_ = other.highlights_.Clone();
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierResult Clone() {
      return new RecognitionClassifierResult(this);
    }

    /// <summary>Field number for the "classifier" field.</summary>
    public const int ClassifierFieldNumber = 1;
    private string classifier_ = "";
    /// <summary>
    /// Name of the triggered classifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Classifier {
      get { return classifier_; }
      set {
        classifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "highlights" field.</summary>
    public const int HighlightsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.PhraseHighlight> _repeated_highlights_codec
        = pb::FieldCodec.ForMessage(18, global::Speechkit.Stt.V3.PhraseHighlight.Parser);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.PhraseHighlight> highlights_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.PhraseHighlight>();
    /// <summary>
    /// List of highlights, i.e. parts of phrase that determine the result of the classification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.PhraseHighlight> Highlights {
      get { return highlights_; }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.RecognitionClassifierLabel> _repeated_labels_codec
        = pb::FieldCodec.ForMessage(26, global::Speechkit.Stt.V3.RecognitionClassifierLabel.Parser);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifierLabel> labels_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifierLabel>();
    /// <summary>
    /// Classifier predictions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.RecognitionClassifierLabel> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecognitionClassifierResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecognitionClassifierResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Classifier != other.Classifier) return false;
      if(!highlights_.Equals(other.highlights_)) return false;
      if(!labels_.Equals(other.labels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Classifier.Length != 0) hash ^= Classifier.GetHashCode();
      hash ^= highlights_.GetHashCode();
      hash ^= labels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Classifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Classifier);
      }
      highlights_.WriteTo(output, _repeated_highlights_codec);
      labels_.WriteTo(output, _repeated_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Classifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Classifier);
      }
      highlights_.WriteTo(ref output, _repeated_highlights_codec);
      labels_.WriteTo(ref output, _repeated_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Classifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Classifier);
      }
      size += highlights_.CalculateSize(_repeated_highlights_codec);
      size += labels_.CalculateSize(_repeated_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecognitionClassifierResult other) {
      if (other == null) {
        return;
      }
      if (other.Classifier.Length != 0) {
        Classifier = other.Classifier;
      }
      highlights_.Add(other.highlights_);
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Classifier = input.ReadString();
            break;
          }
          case 18: {
            highlights_.AddEntriesFrom(input, _repeated_highlights_codec);
            break;
          }
          case 26: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Classifier = input.ReadString();
            break;
          }
          case 18: {
            highlights_.AddEntriesFrom(ref input, _repeated_highlights_codec);
            break;
          }
          case 26: {
            labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RecognitionClassifierUpdate : pb::IMessage<RecognitionClassifierUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecognitionClassifierUpdate> _parser = new pb::MessageParser<RecognitionClassifierUpdate>(() => new RecognitionClassifierUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecognitionClassifierUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierUpdate(RecognitionClassifierUpdate other) : this() {
      windowType_ = other.windowType_;
      startTimeMs_ = other.startTimeMs_;
      endTimeMs_ = other.endTimeMs_;
      classifierResult_ = other.classifierResult_ != null ? other.classifierResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecognitionClassifierUpdate Clone() {
      return new RecognitionClassifierUpdate(this);
    }

    /// <summary>Field number for the "window_type" field.</summary>
    public const int WindowTypeFieldNumber = 1;
    private global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType windowType_ = global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType.Unspecified;
    /// <summary>
    /// Response window type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType WindowType {
      get { return windowType_; }
      set {
        windowType_ = value;
      }
    }

    /// <summary>Field number for the "start_time_ms" field.</summary>
    public const int StartTimeMsFieldNumber = 2;
    private long startTimeMs_;
    /// <summary>
    /// Start time of the audio segment used for classification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimeMs {
      get { return startTimeMs_; }
      set {
        startTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "end_time_ms" field.</summary>
    public const int EndTimeMsFieldNumber = 3;
    private long endTimeMs_;
    /// <summary>
    /// End time of the audio segment used for classification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTimeMs {
      get { return endTimeMs_; }
      set {
        endTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "classifier_result" field.</summary>
    public const int ClassifierResultFieldNumber = 4;
    private global::Speechkit.Stt.V3.RecognitionClassifierResult classifierResult_;
    /// <summary>
    /// Result for dictionary-based classifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RecognitionClassifierResult ClassifierResult {
      get { return classifierResult_; }
      set {
        classifierResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecognitionClassifierUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecognitionClassifierUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowType != other.WindowType) return false;
      if (StartTimeMs != other.StartTimeMs) return false;
      if (EndTimeMs != other.EndTimeMs) return false;
      if (!object.Equals(ClassifierResult, other.ClassifierResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowType != global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType.Unspecified) hash ^= WindowType.GetHashCode();
      if (StartTimeMs != 0L) hash ^= StartTimeMs.GetHashCode();
      if (EndTimeMs != 0L) hash ^= EndTimeMs.GetHashCode();
      if (classifierResult_ != null) hash ^= ClassifierResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WindowType != global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) WindowType);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTimeMs);
      }
      if (classifierResult_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClassifierResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WindowType != global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) WindowType);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTimeMs);
      }
      if (classifierResult_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClassifierResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WindowType != global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WindowType);
      }
      if (StartTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimeMs);
      }
      if (classifierResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassifierResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecognitionClassifierUpdate other) {
      if (other == null) {
        return;
      }
      if (other.WindowType != global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType.Unspecified) {
        WindowType = other.WindowType;
      }
      if (other.StartTimeMs != 0L) {
        StartTimeMs = other.StartTimeMs;
      }
      if (other.EndTimeMs != 0L) {
        EndTimeMs = other.EndTimeMs;
      }
      if (other.classifierResult_ != null) {
        if (classifierResult_ == null) {
          ClassifierResult = new global::Speechkit.Stt.V3.RecognitionClassifierResult();
        }
        ClassifierResult.MergeFrom(other.ClassifierResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WindowType = (global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType) input.ReadEnum();
            break;
          }
          case 16: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            EndTimeMs = input.ReadInt64();
            break;
          }
          case 34: {
            if (classifierResult_ == null) {
              ClassifierResult = new global::Speechkit.Stt.V3.RecognitionClassifierResult();
            }
            input.ReadMessage(ClassifierResult);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WindowType = (global::Speechkit.Stt.V3.RecognitionClassifierUpdate.Types.WindowType) input.ReadEnum();
            break;
          }
          case 16: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            EndTimeMs = input.ReadInt64();
            break;
          }
          case 34: {
            if (classifierResult_ == null) {
              ClassifierResult = new global::Speechkit.Stt.V3.RecognitionClassifierResult();
            }
            input.ReadMessage(ClassifierResult);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RecognitionClassifierUpdate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum WindowType {
        [global::System.ObsoleteAttribute]
        [pbr::OriginalName("WINDOW_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The result of applying the classifier to the last utterance response
        /// </summary>
        [pbr::OriginalName("LAST_UTTERANCE")] LastUtterance = 1,
        /// <summary>
        /// The result of applying the classifier to the last final response
        /// </summary>
        [pbr::OriginalName("LAST_FINAL")] LastFinal = 2,
        /// <summary>
        /// The result of applying the classifier to the last partial response
        /// </summary>
        [pbr::OriginalName("LAST_PARTIAL")] LastPartial = 3,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DescriptiveStatistics : pb::IMessage<DescriptiveStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescriptiveStatistics> _parser = new pb::MessageParser<DescriptiveStatistics>(() => new DescriptiveStatistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DescriptiveStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DescriptiveStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DescriptiveStatistics(DescriptiveStatistics other) : this() {
      min_ = other.min_;
      max_ = other.max_;
      mean_ = other.mean_;
      std_ = other.std_;
      quantiles_ = other.quantiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DescriptiveStatistics Clone() {
      return new DescriptiveStatistics(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private double min_;
    /// <summary>
    /// Minimum observed value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 2;
    private double max_;
    /// <summary>
    /// Maximum observed value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 3;
    private double mean_;
    /// <summary>
    /// Estimated mean of distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mean {
      get { return mean_; }
      set {
        mean_ = value;
      }
    }

    /// <summary>Field number for the "std" field.</summary>
    public const int StdFieldNumber = 4;
    private double std_;
    /// <summary>
    /// Estimated standard deviation of distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Std {
      get { return std_; }
      set {
        std_ = value;
      }
    }

    /// <summary>Field number for the "quantiles" field.</summary>
    public const int QuantilesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.DescriptiveStatistics.Types.Quantile> _repeated_quantiles_codec
        = pb::FieldCodec.ForMessage(42, global::Speechkit.Stt.V3.DescriptiveStatistics.Types.Quantile.Parser);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.DescriptiveStatistics.Types.Quantile> quantiles_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.DescriptiveStatistics.Types.Quantile>();
    /// <summary>
    /// List of evaluated quantiles
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.DescriptiveStatistics.Types.Quantile> Quantiles {
      get { return quantiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DescriptiveStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DescriptiveStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Max, other.Max)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mean, other.Mean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Std, other.Std)) return false;
      if(!quantiles_.Equals(other.quantiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Min != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Min);
      if (Max != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Max);
      if (Mean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mean);
      if (Std != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Std);
      hash ^= quantiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Min != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Min);
      }
      if (Max != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Max);
      }
      if (Mean != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mean);
      }
      if (Std != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Std);
      }
      quantiles_.WriteTo(output, _repeated_quantiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Min != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Min);
      }
      if (Max != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Max);
      }
      if (Mean != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mean);
      }
      if (Std != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Std);
      }
      quantiles_.WriteTo(ref output, _repeated_quantiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Min != 0D) {
        size += 1 + 8;
      }
      if (Max != 0D) {
        size += 1 + 8;
      }
      if (Mean != 0D) {
        size += 1 + 8;
      }
      if (Std != 0D) {
        size += 1 + 8;
      }
      size += quantiles_.CalculateSize(_repeated_quantiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DescriptiveStatistics other) {
      if (other == null) {
        return;
      }
      if (other.Min != 0D) {
        Min = other.Min;
      }
      if (other.Max != 0D) {
        Max = other.Max;
      }
      if (other.Mean != 0D) {
        Mean = other.Mean;
      }
      if (other.Std != 0D) {
        Std = other.Std;
      }
      quantiles_.Add(other.quantiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Min = input.ReadDouble();
            break;
          }
          case 17: {
            Max = input.ReadDouble();
            break;
          }
          case 25: {
            Mean = input.ReadDouble();
            break;
          }
          case 33: {
            Std = input.ReadDouble();
            break;
          }
          case 42: {
            quantiles_.AddEntriesFrom(input, _repeated_quantiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Min = input.ReadDouble();
            break;
          }
          case 17: {
            Max = input.ReadDouble();
            break;
          }
          case 25: {
            Mean = input.ReadDouble();
            break;
          }
          case 33: {
            Std = input.ReadDouble();
            break;
          }
          case 42: {
            quantiles_.AddEntriesFrom(ref input, _repeated_quantiles_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DescriptiveStatistics message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Quantile : pb::IMessage<Quantile>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Quantile> _parser = new pb::MessageParser<Quantile>(() => new Quantile());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Quantile> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Speechkit.Stt.V3.DescriptiveStatistics.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quantile() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quantile(Quantile other) : this() {
          level_ = other.level_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Quantile Clone() {
          return new Quantile(this);
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 1;
        private double level_;
        /// <summary>
        /// Quantile level in range (0, 1)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private double value_;
        /// <summary>
        /// Quantile value
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Quantile);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Quantile other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Level, other.Level)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Level != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Level);
          if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Level != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Level);
          }
          if (Value != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Level != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Level);
          }
          if (Value != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Level != 0D) {
            size += 1 + 8;
          }
          if (Value != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Quantile other) {
          if (other == null) {
            return;
          }
          if (other.Level != 0D) {
            Level = other.Level;
          }
          if (other.Value != 0D) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Level = input.ReadDouble();
                break;
              }
              case 17: {
                Value = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                Level = input.ReadDouble();
                break;
              }
              case 17: {
                Value = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AudioSegmentBoundaries : pb::IMessage<AudioSegmentBoundaries>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioSegmentBoundaries> _parser = new pb::MessageParser<AudioSegmentBoundaries>(() => new AudioSegmentBoundaries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioSegmentBoundaries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioSegmentBoundaries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioSegmentBoundaries(AudioSegmentBoundaries other) : this() {
      startTimeMs_ = other.startTimeMs_;
      endTimeMs_ = other.endTimeMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioSegmentBoundaries Clone() {
      return new AudioSegmentBoundaries(this);
    }

    /// <summary>Field number for the "start_time_ms" field.</summary>
    public const int StartTimeMsFieldNumber = 1;
    private long startTimeMs_;
    /// <summary>
    /// Audio segment start time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimeMs {
      get { return startTimeMs_; }
      set {
        startTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "end_time_ms" field.</summary>
    public const int EndTimeMsFieldNumber = 2;
    private long endTimeMs_;
    /// <summary>
    /// Audio segment end time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTimeMs {
      get { return endTimeMs_; }
      set {
        endTimeMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioSegmentBoundaries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioSegmentBoundaries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTimeMs != other.StartTimeMs) return false;
      if (EndTimeMs != other.EndTimeMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTimeMs != 0L) hash ^= StartTimeMs.GetHashCode();
      if (EndTimeMs != 0L) hash ^= EndTimeMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartTimeMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartTimeMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StartTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimeMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioSegmentBoundaries other) {
      if (other == null) {
        return;
      }
      if (other.StartTimeMs != 0L) {
        StartTimeMs = other.StartTimeMs;
      }
      if (other.EndTimeMs != 0L) {
        EndTimeMs = other.EndTimeMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 16: {
            EndTimeMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 16: {
            EndTimeMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpeakerAnalysis : pb::IMessage<SpeakerAnalysis>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpeakerAnalysis> _parser = new pb::MessageParser<SpeakerAnalysis>(() => new SpeakerAnalysis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpeakerAnalysis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeakerAnalysis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeakerAnalysis(SpeakerAnalysis other) : this() {
      speakerTag_ = other.speakerTag_;
      windowType_ = other.windowType_;
      speechBoundaries_ = other.speechBoundaries_ != null ? other.speechBoundaries_.Clone() : null;
      totalSpeechMs_ = other.totalSpeechMs_;
      speechRatio_ = other.speechRatio_;
      totalSilenceMs_ = other.totalSilenceMs_;
      silenceRatio_ = other.silenceRatio_;
      wordsCount_ = other.wordsCount_;
      lettersCount_ = other.lettersCount_;
      wordsPerSecond_ = other.wordsPerSecond_ != null ? other.wordsPerSecond_.Clone() : null;
      lettersPerSecond_ = other.lettersPerSecond_ != null ? other.lettersPerSecond_.Clone() : null;
      wordsPerUtterance_ = other.wordsPerUtterance_ != null ? other.wordsPerUtterance_.Clone() : null;
      lettersPerUtterance_ = other.lettersPerUtterance_ != null ? other.lettersPerUtterance_.Clone() : null;
      utteranceCount_ = other.utteranceCount_;
      utteranceDurationEstimation_ = other.utteranceDurationEstimation_ != null ? other.utteranceDurationEstimation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeakerAnalysis Clone() {
      return new SpeakerAnalysis(this);
    }

    /// <summary>Field number for the "speaker_tag" field.</summary>
    public const int SpeakerTagFieldNumber = 1;
    private string speakerTag_ = "";
    /// <summary>
    /// Speaker tag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpeakerTag {
      get { return speakerTag_; }
      set {
        speakerTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "window_type" field.</summary>
    public const int WindowTypeFieldNumber = 2;
    private global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType windowType_ = global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType.Unspecified;
    /// <summary>
    /// Response window type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType WindowType {
      get { return windowType_; }
      set {
        windowType_ = value;
      }
    }

    /// <summary>Field number for the "speech_boundaries" field.</summary>
    public const int SpeechBoundariesFieldNumber = 3;
    private global::Speechkit.Stt.V3.AudioSegmentBoundaries speechBoundaries_;
    /// <summary>
    /// Audio segment boundaries
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.AudioSegmentBoundaries SpeechBoundaries {
      get { return speechBoundaries_; }
      set {
        speechBoundaries_ = value;
      }
    }

    /// <summary>Field number for the "total_speech_ms" field.</summary>
    public const int TotalSpeechMsFieldNumber = 4;
    private long totalSpeechMs_;
    /// <summary>
    /// Total speech duration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalSpeechMs {
      get { return totalSpeechMs_; }
      set {
        totalSpeechMs_ = value;
      }
    }

    /// <summary>Field number for the "speech_ratio" field.</summary>
    public const int SpeechRatioFieldNumber = 5;
    private double speechRatio_;
    /// <summary>
    /// Speech ratio within audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SpeechRatio {
      get { return speechRatio_; }
      set {
        speechRatio_ = value;
      }
    }

    /// <summary>Field number for the "total_silence_ms" field.</summary>
    public const int TotalSilenceMsFieldNumber = 6;
    private long totalSilenceMs_;
    /// <summary>
    /// Total silence duration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalSilenceMs {
      get { return totalSilenceMs_; }
      set {
        totalSilenceMs_ = value;
      }
    }

    /// <summary>Field number for the "silence_ratio" field.</summary>
    public const int SilenceRatioFieldNumber = 7;
    private double silenceRatio_;
    /// <summary>
    /// Silence ratio within audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SilenceRatio {
      get { return silenceRatio_; }
      set {
        silenceRatio_ = value;
      }
    }

    /// <summary>Field number for the "words_count" field.</summary>
    public const int WordsCountFieldNumber = 8;
    private long wordsCount_;
    /// <summary>
    /// Number of words in recognized speech
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long WordsCount {
      get { return wordsCount_; }
      set {
        wordsCount_ = value;
      }
    }

    /// <summary>Field number for the "letters_count" field.</summary>
    public const int LettersCountFieldNumber = 9;
    private long lettersCount_;
    /// <summary>
    /// Number of letters in recognized speech
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LettersCount {
      get { return lettersCount_; }
      set {
        lettersCount_ = value;
      }
    }

    /// <summary>Field number for the "words_per_second" field.</summary>
    public const int WordsPerSecondFieldNumber = 10;
    private global::Speechkit.Stt.V3.DescriptiveStatistics wordsPerSecond_;
    /// <summary>
    /// Descriptive statistics for words per second distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DescriptiveStatistics WordsPerSecond {
      get { return wordsPerSecond_; }
      set {
        wordsPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "letters_per_second" field.</summary>
    public const int LettersPerSecondFieldNumber = 11;
    private global::Speechkit.Stt.V3.DescriptiveStatistics lettersPerSecond_;
    /// <summary>
    /// Descriptive statistics for letters per second distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DescriptiveStatistics LettersPerSecond {
      get { return lettersPerSecond_; }
      set {
        lettersPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "words_per_utterance" field.</summary>
    public const int WordsPerUtteranceFieldNumber = 12;
    private global::Speechkit.Stt.V3.DescriptiveStatistics wordsPerUtterance_;
    /// <summary>
    /// Descriptive statistics for words per utterance distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DescriptiveStatistics WordsPerUtterance {
      get { return wordsPerUtterance_; }
      set {
        wordsPerUtterance_ = value;
      }
    }

    /// <summary>Field number for the "letters_per_utterance" field.</summary>
    public const int LettersPerUtteranceFieldNumber = 13;
    private global::Speechkit.Stt.V3.DescriptiveStatistics lettersPerUtterance_;
    /// <summary>
    /// Descriptive statistics for letters per utterance distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DescriptiveStatistics LettersPerUtterance {
      get { return lettersPerUtterance_; }
      set {
        lettersPerUtterance_ = value;
      }
    }

    /// <summary>Field number for the "utterance_count" field.</summary>
    public const int UtteranceCountFieldNumber = 14;
    private long utteranceCount_;
    /// <summary>
    /// Number of utterances
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UtteranceCount {
      get { return utteranceCount_; }
      set {
        utteranceCount_ = value;
      }
    }

    /// <summary>Field number for the "utterance_duration_estimation" field.</summary>
    public const int UtteranceDurationEstimationFieldNumber = 15;
    private global::Speechkit.Stt.V3.DescriptiveStatistics utteranceDurationEstimation_;
    /// <summary>
    /// Descriptive statistics for utterance duration distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DescriptiveStatistics UtteranceDurationEstimation {
      get { return utteranceDurationEstimation_; }
      set {
        utteranceDurationEstimation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpeakerAnalysis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpeakerAnalysis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpeakerTag != other.SpeakerTag) return false;
      if (WindowType != other.WindowType) return false;
      if (!object.Equals(SpeechBoundaries, other.SpeechBoundaries)) return false;
      if (TotalSpeechMs != other.TotalSpeechMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SpeechRatio, other.SpeechRatio)) return false;
      if (TotalSilenceMs != other.TotalSilenceMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SilenceRatio, other.SilenceRatio)) return false;
      if (WordsCount != other.WordsCount) return false;
      if (LettersCount != other.LettersCount) return false;
      if (!object.Equals(WordsPerSecond, other.WordsPerSecond)) return false;
      if (!object.Equals(LettersPerSecond, other.LettersPerSecond)) return false;
      if (!object.Equals(WordsPerUtterance, other.WordsPerUtterance)) return false;
      if (!object.Equals(LettersPerUtterance, other.LettersPerUtterance)) return false;
      if (UtteranceCount != other.UtteranceCount) return false;
      if (!object.Equals(UtteranceDurationEstimation, other.UtteranceDurationEstimation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SpeakerTag.Length != 0) hash ^= SpeakerTag.GetHashCode();
      if (WindowType != global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType.Unspecified) hash ^= WindowType.GetHashCode();
      if (speechBoundaries_ != null) hash ^= SpeechBoundaries.GetHashCode();
      if (TotalSpeechMs != 0L) hash ^= TotalSpeechMs.GetHashCode();
      if (SpeechRatio != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SpeechRatio);
      if (TotalSilenceMs != 0L) hash ^= TotalSilenceMs.GetHashCode();
      if (SilenceRatio != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SilenceRatio);
      if (WordsCount != 0L) hash ^= WordsCount.GetHashCode();
      if (LettersCount != 0L) hash ^= LettersCount.GetHashCode();
      if (wordsPerSecond_ != null) hash ^= WordsPerSecond.GetHashCode();
      if (lettersPerSecond_ != null) hash ^= LettersPerSecond.GetHashCode();
      if (wordsPerUtterance_ != null) hash ^= WordsPerUtterance.GetHashCode();
      if (lettersPerUtterance_ != null) hash ^= LettersPerUtterance.GetHashCode();
      if (UtteranceCount != 0L) hash ^= UtteranceCount.GetHashCode();
      if (utteranceDurationEstimation_ != null) hash ^= UtteranceDurationEstimation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SpeakerTag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SpeakerTag);
      }
      if (WindowType != global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WindowType);
      }
      if (speechBoundaries_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SpeechBoundaries);
      }
      if (TotalSpeechMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalSpeechMs);
      }
      if (SpeechRatio != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(SpeechRatio);
      }
      if (TotalSilenceMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalSilenceMs);
      }
      if (SilenceRatio != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(SilenceRatio);
      }
      if (WordsCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(WordsCount);
      }
      if (LettersCount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(LettersCount);
      }
      if (wordsPerSecond_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(WordsPerSecond);
      }
      if (lettersPerSecond_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LettersPerSecond);
      }
      if (wordsPerUtterance_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(WordsPerUtterance);
      }
      if (lettersPerUtterance_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LettersPerUtterance);
      }
      if (UtteranceCount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(UtteranceCount);
      }
      if (utteranceDurationEstimation_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(UtteranceDurationEstimation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SpeakerTag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SpeakerTag);
      }
      if (WindowType != global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WindowType);
      }
      if (speechBoundaries_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SpeechBoundaries);
      }
      if (TotalSpeechMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalSpeechMs);
      }
      if (SpeechRatio != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(SpeechRatio);
      }
      if (TotalSilenceMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalSilenceMs);
      }
      if (SilenceRatio != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(SilenceRatio);
      }
      if (WordsCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(WordsCount);
      }
      if (LettersCount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(LettersCount);
      }
      if (wordsPerSecond_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(WordsPerSecond);
      }
      if (lettersPerSecond_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LettersPerSecond);
      }
      if (wordsPerUtterance_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(WordsPerUtterance);
      }
      if (lettersPerUtterance_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LettersPerUtterance);
      }
      if (UtteranceCount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(UtteranceCount);
      }
      if (utteranceDurationEstimation_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(UtteranceDurationEstimation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SpeakerTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpeakerTag);
      }
      if (WindowType != global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WindowType);
      }
      if (speechBoundaries_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpeechBoundaries);
      }
      if (TotalSpeechMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSpeechMs);
      }
      if (SpeechRatio != 0D) {
        size += 1 + 8;
      }
      if (TotalSilenceMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSilenceMs);
      }
      if (SilenceRatio != 0D) {
        size += 1 + 8;
      }
      if (WordsCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WordsCount);
      }
      if (LettersCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LettersCount);
      }
      if (wordsPerSecond_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WordsPerSecond);
      }
      if (lettersPerSecond_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LettersPerSecond);
      }
      if (wordsPerUtterance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WordsPerUtterance);
      }
      if (lettersPerUtterance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LettersPerUtterance);
      }
      if (UtteranceCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UtteranceCount);
      }
      if (utteranceDurationEstimation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UtteranceDurationEstimation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpeakerAnalysis other) {
      if (other == null) {
        return;
      }
      if (other.SpeakerTag.Length != 0) {
        SpeakerTag = other.SpeakerTag;
      }
      if (other.WindowType != global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType.Unspecified) {
        WindowType = other.WindowType;
      }
      if (other.speechBoundaries_ != null) {
        if (speechBoundaries_ == null) {
          SpeechBoundaries = new global::Speechkit.Stt.V3.AudioSegmentBoundaries();
        }
        SpeechBoundaries.MergeFrom(other.SpeechBoundaries);
      }
      if (other.TotalSpeechMs != 0L) {
        TotalSpeechMs = other.TotalSpeechMs;
      }
      if (other.SpeechRatio != 0D) {
        SpeechRatio = other.SpeechRatio;
      }
      if (other.TotalSilenceMs != 0L) {
        TotalSilenceMs = other.TotalSilenceMs;
      }
      if (other.SilenceRatio != 0D) {
        SilenceRatio = other.SilenceRatio;
      }
      if (other.WordsCount != 0L) {
        WordsCount = other.WordsCount;
      }
      if (other.LettersCount != 0L) {
        LettersCount = other.LettersCount;
      }
      if (other.wordsPerSecond_ != null) {
        if (wordsPerSecond_ == null) {
          WordsPerSecond = new global::Speechkit.Stt.V3.DescriptiveStatistics();
        }
        WordsPerSecond.MergeFrom(other.WordsPerSecond);
      }
      if (other.lettersPerSecond_ != null) {
        if (lettersPerSecond_ == null) {
          LettersPerSecond = new global::Speechkit.Stt.V3.DescriptiveStatistics();
        }
        LettersPerSecond.MergeFrom(other.LettersPerSecond);
      }
      if (other.wordsPerUtterance_ != null) {
        if (wordsPerUtterance_ == null) {
          WordsPerUtterance = new global::Speechkit.Stt.V3.DescriptiveStatistics();
        }
        WordsPerUtterance.MergeFrom(other.WordsPerUtterance);
      }
      if (other.lettersPerUtterance_ != null) {
        if (lettersPerUtterance_ == null) {
          LettersPerUtterance = new global::Speechkit.Stt.V3.DescriptiveStatistics();
        }
        LettersPerUtterance.MergeFrom(other.LettersPerUtterance);
      }
      if (other.UtteranceCount != 0L) {
        UtteranceCount = other.UtteranceCount;
      }
      if (other.utteranceDurationEstimation_ != null) {
        if (utteranceDurationEstimation_ == null) {
          UtteranceDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
        }
        UtteranceDurationEstimation.MergeFrom(other.UtteranceDurationEstimation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SpeakerTag = input.ReadString();
            break;
          }
          case 16: {
            WindowType = (global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType) input.ReadEnum();
            break;
          }
          case 26: {
            if (speechBoundaries_ == null) {
              SpeechBoundaries = new global::Speechkit.Stt.V3.AudioSegmentBoundaries();
            }
            input.ReadMessage(SpeechBoundaries);
            break;
          }
          case 32: {
            TotalSpeechMs = input.ReadInt64();
            break;
          }
          case 41: {
            SpeechRatio = input.ReadDouble();
            break;
          }
          case 48: {
            TotalSilenceMs = input.ReadInt64();
            break;
          }
          case 57: {
            SilenceRatio = input.ReadDouble();
            break;
          }
          case 64: {
            WordsCount = input.ReadInt64();
            break;
          }
          case 72: {
            LettersCount = input.ReadInt64();
            break;
          }
          case 82: {
            if (wordsPerSecond_ == null) {
              WordsPerSecond = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(WordsPerSecond);
            break;
          }
          case 90: {
            if (lettersPerSecond_ == null) {
              LettersPerSecond = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(LettersPerSecond);
            break;
          }
          case 98: {
            if (wordsPerUtterance_ == null) {
              WordsPerUtterance = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(WordsPerUtterance);
            break;
          }
          case 106: {
            if (lettersPerUtterance_ == null) {
              LettersPerUtterance = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(LettersPerUtterance);
            break;
          }
          case 112: {
            UtteranceCount = input.ReadInt64();
            break;
          }
          case 122: {
            if (utteranceDurationEstimation_ == null) {
              UtteranceDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(UtteranceDurationEstimation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SpeakerTag = input.ReadString();
            break;
          }
          case 16: {
            WindowType = (global::Speechkit.Stt.V3.SpeakerAnalysis.Types.WindowType) input.ReadEnum();
            break;
          }
          case 26: {
            if (speechBoundaries_ == null) {
              SpeechBoundaries = new global::Speechkit.Stt.V3.AudioSegmentBoundaries();
            }
            input.ReadMessage(SpeechBoundaries);
            break;
          }
          case 32: {
            TotalSpeechMs = input.ReadInt64();
            break;
          }
          case 41: {
            SpeechRatio = input.ReadDouble();
            break;
          }
          case 48: {
            TotalSilenceMs = input.ReadInt64();
            break;
          }
          case 57: {
            SilenceRatio = input.ReadDouble();
            break;
          }
          case 64: {
            WordsCount = input.ReadInt64();
            break;
          }
          case 72: {
            LettersCount = input.ReadInt64();
            break;
          }
          case 82: {
            if (wordsPerSecond_ == null) {
              WordsPerSecond = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(WordsPerSecond);
            break;
          }
          case 90: {
            if (lettersPerSecond_ == null) {
              LettersPerSecond = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(LettersPerSecond);
            break;
          }
          case 98: {
            if (wordsPerUtterance_ == null) {
              WordsPerUtterance = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(WordsPerUtterance);
            break;
          }
          case 106: {
            if (lettersPerUtterance_ == null) {
              LettersPerUtterance = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(LettersPerUtterance);
            break;
          }
          case 112: {
            UtteranceCount = input.ReadInt64();
            break;
          }
          case 122: {
            if (utteranceDurationEstimation_ == null) {
              UtteranceDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(UtteranceDurationEstimation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpeakerAnalysis message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum WindowType {
        [global::System.ObsoleteAttribute]
        [pbr::OriginalName("WINDOW_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Stats for all received audio.
        /// </summary>
        [pbr::OriginalName("TOTAL")] Total = 1,
        /// <summary>
        /// Stats for last utterance.
        /// </summary>
        [pbr::OriginalName("LAST_UTTERANCE")] LastUtterance = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConversationAnalysis : pb::IMessage<ConversationAnalysis>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConversationAnalysis> _parser = new pb::MessageParser<ConversationAnalysis>(() => new ConversationAnalysis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConversationAnalysis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversationAnalysis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversationAnalysis(ConversationAnalysis other) : this() {
      conversationBoundaries_ = other.conversationBoundaries_ != null ? other.conversationBoundaries_.Clone() : null;
      totalSimultaneousSilenceDurationMs_ = other.totalSimultaneousSilenceDurationMs_;
      totalSimultaneousSilenceRatio_ = other.totalSimultaneousSilenceRatio_;
      simultaneousSilenceDurationEstimation_ = other.simultaneousSilenceDurationEstimation_ != null ? other.simultaneousSilenceDurationEstimation_.Clone() : null;
      totalSimultaneousSpeechDurationMs_ = other.totalSimultaneousSpeechDurationMs_;
      totalSimultaneousSpeechRatio_ = other.totalSimultaneousSpeechRatio_;
      simultaneousSpeechDurationEstimation_ = other.simultaneousSpeechDurationEstimation_ != null ? other.simultaneousSpeechDurationEstimation_.Clone() : null;
      speakerInterrupts_ = other.speakerInterrupts_.Clone();
      totalSpeechDurationMs_ = other.totalSpeechDurationMs_;
      totalSpeechRatio_ = other.totalSpeechRatio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversationAnalysis Clone() {
      return new ConversationAnalysis(this);
    }

    /// <summary>Field number for the "conversation_boundaries" field.</summary>
    public const int ConversationBoundariesFieldNumber = 1;
    private global::Speechkit.Stt.V3.AudioSegmentBoundaries conversationBoundaries_;
    /// <summary>
    /// Audio segment boundaries
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.AudioSegmentBoundaries ConversationBoundaries {
      get { return conversationBoundaries_; }
      set {
        conversationBoundaries_ = value;
      }
    }

    /// <summary>Field number for the "total_simultaneous_silence_duration_ms" field.</summary>
    public const int TotalSimultaneousSilenceDurationMsFieldNumber = 2;
    private long totalSimultaneousSilenceDurationMs_;
    /// <summary>
    /// Total simultaneous silence duration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalSimultaneousSilenceDurationMs {
      get { return totalSimultaneousSilenceDurationMs_; }
      set {
        totalSimultaneousSilenceDurationMs_ = value;
      }
    }

    /// <summary>Field number for the "total_simultaneous_silence_ratio" field.</summary>
    public const int TotalSimultaneousSilenceRatioFieldNumber = 3;
    private double totalSimultaneousSilenceRatio_;
    /// <summary>
    /// Simultaneous silence ratio within audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalSimultaneousSilenceRatio {
      get { return totalSimultaneousSilenceRatio_; }
      set {
        totalSimultaneousSilenceRatio_ = value;
      }
    }

    /// <summary>Field number for the "simultaneous_silence_duration_estimation" field.</summary>
    public const int SimultaneousSilenceDurationEstimationFieldNumber = 4;
    private global::Speechkit.Stt.V3.DescriptiveStatistics simultaneousSilenceDurationEstimation_;
    /// <summary>
    /// Descriptive statistics for simultaneous silence duration distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DescriptiveStatistics SimultaneousSilenceDurationEstimation {
      get { return simultaneousSilenceDurationEstimation_; }
      set {
        simultaneousSilenceDurationEstimation_ = value;
      }
    }

    /// <summary>Field number for the "total_simultaneous_speech_duration_ms" field.</summary>
    public const int TotalSimultaneousSpeechDurationMsFieldNumber = 5;
    private long totalSimultaneousSpeechDurationMs_;
    /// <summary>
    /// Total simultaneous speech duration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalSimultaneousSpeechDurationMs {
      get { return totalSimultaneousSpeechDurationMs_; }
      set {
        totalSimultaneousSpeechDurationMs_ = value;
      }
    }

    /// <summary>Field number for the "total_simultaneous_speech_ratio" field.</summary>
    public const int TotalSimultaneousSpeechRatioFieldNumber = 6;
    private double totalSimultaneousSpeechRatio_;
    /// <summary>
    /// Simultaneous speech ratio within audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalSimultaneousSpeechRatio {
      get { return totalSimultaneousSpeechRatio_; }
      set {
        totalSimultaneousSpeechRatio_ = value;
      }
    }

    /// <summary>Field number for the "simultaneous_speech_duration_estimation" field.</summary>
    public const int SimultaneousSpeechDurationEstimationFieldNumber = 7;
    private global::Speechkit.Stt.V3.DescriptiveStatistics simultaneousSpeechDurationEstimation_;
    /// <summary>
    /// Descriptive statistics for simultaneous speech duration distribution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.DescriptiveStatistics SimultaneousSpeechDurationEstimation {
      get { return simultaneousSpeechDurationEstimation_; }
      set {
        simultaneousSpeechDurationEstimation_ = value;
      }
    }

    /// <summary>Field number for the "speaker_interrupts" field.</summary>
    public const int SpeakerInterruptsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.ConversationAnalysis.Types.InterruptsEvaluation> _repeated_speakerInterrupts_codec
        = pb::FieldCodec.ForMessage(66, global::Speechkit.Stt.V3.ConversationAnalysis.Types.InterruptsEvaluation.Parser);
    private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.ConversationAnalysis.Types.InterruptsEvaluation> speakerInterrupts_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.ConversationAnalysis.Types.InterruptsEvaluation>();
    /// <summary>
    /// Interrupts description for every speaker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Speechkit.Stt.V3.ConversationAnalysis.Types.InterruptsEvaluation> SpeakerInterrupts {
      get { return speakerInterrupts_; }
    }

    /// <summary>Field number for the "total_speech_duration_ms" field.</summary>
    public const int TotalSpeechDurationMsFieldNumber = 9;
    private long totalSpeechDurationMs_;
    /// <summary>
    /// Total speech duration, including both simultaneous and separate speech
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalSpeechDurationMs {
      get { return totalSpeechDurationMs_; }
      set {
        totalSpeechDurationMs_ = value;
      }
    }

    /// <summary>Field number for the "total_speech_ratio" field.</summary>
    public const int TotalSpeechRatioFieldNumber = 10;
    private double totalSpeechRatio_;
    /// <summary>
    /// Total speech ratio within audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalSpeechRatio {
      get { return totalSpeechRatio_; }
      set {
        totalSpeechRatio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConversationAnalysis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConversationAnalysis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationBoundaries, other.ConversationBoundaries)) return false;
      if (TotalSimultaneousSilenceDurationMs != other.TotalSimultaneousSilenceDurationMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalSimultaneousSilenceRatio, other.TotalSimultaneousSilenceRatio)) return false;
      if (!object.Equals(SimultaneousSilenceDurationEstimation, other.SimultaneousSilenceDurationEstimation)) return false;
      if (TotalSimultaneousSpeechDurationMs != other.TotalSimultaneousSpeechDurationMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalSimultaneousSpeechRatio, other.TotalSimultaneousSpeechRatio)) return false;
      if (!object.Equals(SimultaneousSpeechDurationEstimation, other.SimultaneousSpeechDurationEstimation)) return false;
      if(!speakerInterrupts_.Equals(other.speakerInterrupts_)) return false;
      if (TotalSpeechDurationMs != other.TotalSpeechDurationMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalSpeechRatio, other.TotalSpeechRatio)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (conversationBoundaries_ != null) hash ^= ConversationBoundaries.GetHashCode();
      if (TotalSimultaneousSilenceDurationMs != 0L) hash ^= TotalSimultaneousSilenceDurationMs.GetHashCode();
      if (TotalSimultaneousSilenceRatio != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalSimultaneousSilenceRatio);
      if (simultaneousSilenceDurationEstimation_ != null) hash ^= SimultaneousSilenceDurationEstimation.GetHashCode();
      if (TotalSimultaneousSpeechDurationMs != 0L) hash ^= TotalSimultaneousSpeechDurationMs.GetHashCode();
      if (TotalSimultaneousSpeechRatio != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalSimultaneousSpeechRatio);
      if (simultaneousSpeechDurationEstimation_ != null) hash ^= SimultaneousSpeechDurationEstimation.GetHashCode();
      hash ^= speakerInterrupts_.GetHashCode();
      if (TotalSpeechDurationMs != 0L) hash ^= TotalSpeechDurationMs.GetHashCode();
      if (TotalSpeechRatio != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalSpeechRatio);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (conversationBoundaries_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationBoundaries);
      }
      if (TotalSimultaneousSilenceDurationMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalSimultaneousSilenceDurationMs);
      }
      if (TotalSimultaneousSilenceRatio != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalSimultaneousSilenceRatio);
      }
      if (simultaneousSilenceDurationEstimation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SimultaneousSilenceDurationEstimation);
      }
      if (TotalSimultaneousSpeechDurationMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalSimultaneousSpeechDurationMs);
      }
      if (TotalSimultaneousSpeechRatio != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TotalSimultaneousSpeechRatio);
      }
      if (simultaneousSpeechDurationEstimation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SimultaneousSpeechDurationEstimation);
      }
      speakerInterrupts_.WriteTo(output, _repeated_speakerInterrupts_codec);
      if (TotalSpeechDurationMs != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TotalSpeechDurationMs);
      }
      if (TotalSpeechRatio != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(TotalSpeechRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (conversationBoundaries_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationBoundaries);
      }
      if (TotalSimultaneousSilenceDurationMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalSimultaneousSilenceDurationMs);
      }
      if (TotalSimultaneousSilenceRatio != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalSimultaneousSilenceRatio);
      }
      if (simultaneousSilenceDurationEstimation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SimultaneousSilenceDurationEstimation);
      }
      if (TotalSimultaneousSpeechDurationMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalSimultaneousSpeechDurationMs);
      }
      if (TotalSimultaneousSpeechRatio != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TotalSimultaneousSpeechRatio);
      }
      if (simultaneousSpeechDurationEstimation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SimultaneousSpeechDurationEstimation);
      }
      speakerInterrupts_.WriteTo(ref output, _repeated_speakerInterrupts_codec);
      if (TotalSpeechDurationMs != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TotalSpeechDurationMs);
      }
      if (TotalSpeechRatio != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(TotalSpeechRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (conversationBoundaries_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationBoundaries);
      }
      if (TotalSimultaneousSilenceDurationMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSimultaneousSilenceDurationMs);
      }
      if (TotalSimultaneousSilenceRatio != 0D) {
        size += 1 + 8;
      }
      if (simultaneousSilenceDurationEstimation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimultaneousSilenceDurationEstimation);
      }
      if (TotalSimultaneousSpeechDurationMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSimultaneousSpeechDurationMs);
      }
      if (TotalSimultaneousSpeechRatio != 0D) {
        size += 1 + 8;
      }
      if (simultaneousSpeechDurationEstimation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimultaneousSpeechDurationEstimation);
      }
      size += speakerInterrupts_.CalculateSize(_repeated_speakerInterrupts_codec);
      if (TotalSpeechDurationMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSpeechDurationMs);
      }
      if (TotalSpeechRatio != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConversationAnalysis other) {
      if (other == null) {
        return;
      }
      if (other.conversationBoundaries_ != null) {
        if (conversationBoundaries_ == null) {
          ConversationBoundaries = new global::Speechkit.Stt.V3.AudioSegmentBoundaries();
        }
        ConversationBoundaries.MergeFrom(other.ConversationBoundaries);
      }
      if (other.TotalSimultaneousSilenceDurationMs != 0L) {
        TotalSimultaneousSilenceDurationMs = other.TotalSimultaneousSilenceDurationMs;
      }
      if (other.TotalSimultaneousSilenceRatio != 0D) {
        TotalSimultaneousSilenceRatio = other.TotalSimultaneousSilenceRatio;
      }
      if (other.simultaneousSilenceDurationEstimation_ != null) {
        if (simultaneousSilenceDurationEstimation_ == null) {
          SimultaneousSilenceDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
        }
        SimultaneousSilenceDurationEstimation.MergeFrom(other.SimultaneousSilenceDurationEstimation);
      }
      if (other.TotalSimultaneousSpeechDurationMs != 0L) {
        TotalSimultaneousSpeechDurationMs = other.TotalSimultaneousSpeechDurationMs;
      }
      if (other.TotalSimultaneousSpeechRatio != 0D) {
        TotalSimultaneousSpeechRatio = other.TotalSimultaneousSpeechRatio;
      }
      if (other.simultaneousSpeechDurationEstimation_ != null) {
        if (simultaneousSpeechDurationEstimation_ == null) {
          SimultaneousSpeechDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
        }
        SimultaneousSpeechDurationEstimation.MergeFrom(other.SimultaneousSpeechDurationEstimation);
      }
      speakerInterrupts_.Add(other.speakerInterrupts_);
      if (other.TotalSpeechDurationMs != 0L) {
        TotalSpeechDurationMs = other.TotalSpeechDurationMs;
      }
      if (other.TotalSpeechRatio != 0D) {
        TotalSpeechRatio = other.TotalSpeechRatio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (conversationBoundaries_ == null) {
              ConversationBoundaries = new global::Speechkit.Stt.V3.AudioSegmentBoundaries();
            }
            input.ReadMessage(ConversationBoundaries);
            break;
          }
          case 16: {
            TotalSimultaneousSilenceDurationMs = input.ReadInt64();
            break;
          }
          case 25: {
            TotalSimultaneousSilenceRatio = input.ReadDouble();
            break;
          }
          case 34: {
            if (simultaneousSilenceDurationEstimation_ == null) {
              SimultaneousSilenceDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(SimultaneousSilenceDurationEstimation);
            break;
          }
          case 40: {
            TotalSimultaneousSpeechDurationMs = input.ReadInt64();
            break;
          }
          case 49: {
            TotalSimultaneousSpeechRatio = input.ReadDouble();
            break;
          }
          case 58: {
            if (simultaneousSpeechDurationEstimation_ == null) {
              SimultaneousSpeechDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(SimultaneousSpeechDurationEstimation);
            break;
          }
          case 66: {
            speakerInterrupts_.AddEntriesFrom(input, _repeated_speakerInterrupts_codec);
            break;
          }
          case 72: {
            TotalSpeechDurationMs = input.ReadInt64();
            break;
          }
          case 81: {
            TotalSpeechRatio = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (conversationBoundaries_ == null) {
              ConversationBoundaries = new global::Speechkit.Stt.V3.AudioSegmentBoundaries();
            }
            input.ReadMessage(ConversationBoundaries);
            break;
          }
          case 16: {
            TotalSimultaneousSilenceDurationMs = input.ReadInt64();
            break;
          }
          case 25: {
            TotalSimultaneousSilenceRatio = input.ReadDouble();
            break;
          }
          case 34: {
            if (simultaneousSilenceDurationEstimation_ == null) {
              SimultaneousSilenceDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(SimultaneousSilenceDurationEstimation);
            break;
          }
          case 40: {
            TotalSimultaneousSpeechDurationMs = input.ReadInt64();
            break;
          }
          case 49: {
            TotalSimultaneousSpeechRatio = input.ReadDouble();
            break;
          }
          case 58: {
            if (simultaneousSpeechDurationEstimation_ == null) {
              SimultaneousSpeechDurationEstimation = new global::Speechkit.Stt.V3.DescriptiveStatistics();
            }
            input.ReadMessage(SimultaneousSpeechDurationEstimation);
            break;
          }
          case 66: {
            speakerInterrupts_.AddEntriesFrom(ref input, _repeated_speakerInterrupts_codec);
            break;
          }
          case 72: {
            TotalSpeechDurationMs = input.ReadInt64();
            break;
          }
          case 81: {
            TotalSpeechRatio = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ConversationAnalysis message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class InterruptsEvaluation : pb::IMessage<InterruptsEvaluation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InterruptsEvaluation> _parser = new pb::MessageParser<InterruptsEvaluation>(() => new InterruptsEvaluation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<InterruptsEvaluation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Speechkit.Stt.V3.ConversationAnalysis.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InterruptsEvaluation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InterruptsEvaluation(InterruptsEvaluation other) : this() {
          speakerTag_ = other.speakerTag_;
          interruptsCount_ = other.interruptsCount_;
          interruptsDurationMs_ = other.interruptsDurationMs_;
          interrupts_ = other.interrupts_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InterruptsEvaluation Clone() {
          return new InterruptsEvaluation(this);
        }

        /// <summary>Field number for the "speaker_tag" field.</summary>
        public const int SpeakerTagFieldNumber = 1;
        private string speakerTag_ = "";
        /// <summary>
        /// Speaker tag
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SpeakerTag {
          get { return speakerTag_; }
          set {
            speakerTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "interrupts_count" field.</summary>
        public const int InterruptsCountFieldNumber = 2;
        private long interruptsCount_;
        /// <summary>
        /// Number of interrupts made by the speaker
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long InterruptsCount {
          get { return interruptsCount_; }
          set {
            interruptsCount_ = value;
          }
        }

        /// <summary>Field number for the "interrupts_duration_ms" field.</summary>
        public const int InterruptsDurationMsFieldNumber = 3;
        private long interruptsDurationMs_;
        /// <summary>
        /// Total duration of all interrupts
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long InterruptsDurationMs {
          get { return interruptsDurationMs_; }
          set {
            interruptsDurationMs_ = value;
          }
        }

        /// <summary>Field number for the "interrupts" field.</summary>
        public const int InterruptsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Speechkit.Stt.V3.AudioSegmentBoundaries> _repeated_interrupts_codec
            = pb::FieldCodec.ForMessage(34, global::Speechkit.Stt.V3.AudioSegmentBoundaries.Parser);
        private readonly pbc::RepeatedField<global::Speechkit.Stt.V3.AudioSegmentBoundaries> interrupts_ = new pbc::RepeatedField<global::Speechkit.Stt.V3.AudioSegmentBoundaries>();
        /// <summary>
        /// Boundaries for every interrupt
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Speechkit.Stt.V3.AudioSegmentBoundaries> Interrupts {
          get { return interrupts_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as InterruptsEvaluation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(InterruptsEvaluation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SpeakerTag != other.SpeakerTag) return false;
          if (InterruptsCount != other.InterruptsCount) return false;
          if (InterruptsDurationMs != other.InterruptsDurationMs) return false;
          if(!interrupts_.Equals(other.interrupts_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SpeakerTag.Length != 0) hash ^= SpeakerTag.GetHashCode();
          if (InterruptsCount != 0L) hash ^= InterruptsCount.GetHashCode();
          if (InterruptsDurationMs != 0L) hash ^= InterruptsDurationMs.GetHashCode();
          hash ^= interrupts_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SpeakerTag.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SpeakerTag);
          }
          if (InterruptsCount != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(InterruptsCount);
          }
          if (InterruptsDurationMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(InterruptsDurationMs);
          }
          interrupts_.WriteTo(output, _repeated_interrupts_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SpeakerTag.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SpeakerTag);
          }
          if (InterruptsCount != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(InterruptsCount);
          }
          if (InterruptsDurationMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(InterruptsDurationMs);
          }
          interrupts_.WriteTo(ref output, _repeated_interrupts_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SpeakerTag.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SpeakerTag);
          }
          if (InterruptsCount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InterruptsCount);
          }
          if (InterruptsDurationMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InterruptsDurationMs);
          }
          size += interrupts_.CalculateSize(_repeated_interrupts_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(InterruptsEvaluation other) {
          if (other == null) {
            return;
          }
          if (other.SpeakerTag.Length != 0) {
            SpeakerTag = other.SpeakerTag;
          }
          if (other.InterruptsCount != 0L) {
            InterruptsCount = other.InterruptsCount;
          }
          if (other.InterruptsDurationMs != 0L) {
            InterruptsDurationMs = other.InterruptsDurationMs;
          }
          interrupts_.Add(other.interrupts_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SpeakerTag = input.ReadString();
                break;
              }
              case 16: {
                InterruptsCount = input.ReadInt64();
                break;
              }
              case 24: {
                InterruptsDurationMs = input.ReadInt64();
                break;
              }
              case 34: {
                interrupts_.AddEntriesFrom(input, _repeated_interrupts_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SpeakerTag = input.ReadString();
                break;
              }
              case 16: {
                InterruptsCount = input.ReadInt64();
                break;
              }
              case 24: {
                InterruptsDurationMs = input.ReadInt64();
                break;
              }
              case 34: {
                interrupts_.AddEntriesFrom(ref input, _repeated_interrupts_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Responses from server.
  /// Each response contains session uuid
  /// AudioCursors
  /// plus specific event
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StreamingResponse : pb::IMessage<StreamingResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingResponse> _parser = new pb::MessageParser<StreamingResponse>(() => new StreamingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Speechkit.Stt.V3.SttReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingResponse(StreamingResponse other) : this() {
      sessionUuid_ = other.sessionUuid_ != null ? other.sessionUuid_.Clone() : null;
      audioCursors_ = other.audioCursors_ != null ? other.audioCursors_.Clone() : null;
      responseWallTimeMs_ = other.responseWallTimeMs_;
      channelTag_ = other.channelTag_;
      switch (other.EventCase) {
        case EventOneofCase.Partial:
          Partial = other.Partial.Clone();
          break;
        case EventOneofCase.Final:
          Final = other.Final.Clone();
          break;
        case EventOneofCase.EouUpdate:
          EouUpdate = other.EouUpdate.Clone();
          break;
        case EventOneofCase.FinalRefinement:
          FinalRefinement = other.FinalRefinement.Clone();
          break;
        case EventOneofCase.StatusCode:
          StatusCode = other.StatusCode.Clone();
          break;
        case EventOneofCase.ClassifierUpdate:
          ClassifierUpdate = other.ClassifierUpdate.Clone();
          break;
        case EventOneofCase.SpeakerAnalysis:
          SpeakerAnalysis = other.SpeakerAnalysis.Clone();
          break;
        case EventOneofCase.ConversationAnalysis:
          ConversationAnalysis = other.ConversationAnalysis.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingResponse Clone() {
      return new StreamingResponse(this);
    }

    /// <summary>Field number for the "session_uuid" field.</summary>
    public const int SessionUuidFieldNumber = 1;
    private global::Speechkit.Stt.V3.SessionUuid sessionUuid_;
    /// <summary>
    /// Session identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.SessionUuid SessionUuid {
      get { return sessionUuid_; }
      set {
        sessionUuid_ = value;
      }
    }

    /// <summary>Field number for the "audio_cursors" field.</summary>
    public const int AudioCursorsFieldNumber = 2;
    private global::Speechkit.Stt.V3.AudioCursors audioCursors_;
    /// <summary>
    /// Progress bar for stream session recognition: how many data we obtained; final and partial times; etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.AudioCursors AudioCursors {
      get { return audioCursors_; }
      set {
        audioCursors_ = value;
      }
    }

    /// <summary>Field number for the "response_wall_time_ms" field.</summary>
    public const int ResponseWallTimeMsFieldNumber = 3;
    private long responseWallTimeMs_;
    /// <summary>
    /// Wall clock on server side. This is time when server wrote results to stream
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ResponseWallTimeMs {
      get { return responseWallTimeMs_; }
      set {
        responseWallTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "partial" field.</summary>
    public const int PartialFieldNumber = 4;
    /// <summary>
    /// Partial results, server will send them regularly after enough audio data was received from user. This are current text estimation
    /// from final_time_ms to partial_time_ms. Could change after new data will arrive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.AlternativeUpdate Partial {
      get { return eventCase_ == EventOneofCase.Partial ? (global::Speechkit.Stt.V3.AlternativeUpdate) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Partial;
      }
    }

    /// <summary>Field number for the "final" field.</summary>
    public const int FinalFieldNumber = 5;
    /// <summary>
    /// Final results, the recognition is now fixed until final_time_ms. For now, final is sent only if the EOU event was triggered. This could be change in future releases.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.AlternativeUpdate Final {
      get { return eventCase_ == EventOneofCase.Final ? (global::Speechkit.Stt.V3.AlternativeUpdate) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Final;
      }
    }

    /// <summary>Field number for the "eou_update" field.</summary>
    public const int EouUpdateFieldNumber = 6;
    /// <summary>
    /// After EOU classifier, send the message with final, send the EouUpdate with time of EOU
    /// before eou_update we send final with the same time. there could be several finals before eou update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.EouUpdate EouUpdate {
      get { return eventCase_ == EventOneofCase.EouUpdate ? (global::Speechkit.Stt.V3.EouUpdate) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.EouUpdate;
      }
    }

    /// <summary>Field number for the "final_refinement" field.</summary>
    public const int FinalRefinementFieldNumber = 7;
    /// <summary>
    /// For each final, if normalization is enabled, sent the normalized text (or some other advanced post-processing).
    /// Final normalization will introduce additional latency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.FinalRefinement FinalRefinement {
      get { return eventCase_ == EventOneofCase.FinalRefinement ? (global::Speechkit.Stt.V3.FinalRefinement) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.FinalRefinement;
      }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 8;
    /// <summary>
    /// Status messages, send by server with fixed interval (keep-alive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.StatusCode StatusCode {
      get { return eventCase_ == EventOneofCase.StatusCode ? (global::Speechkit.Stt.V3.StatusCode) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.StatusCode;
      }
    }

    /// <summary>Field number for the "classifier_update" field.</summary>
    public const int ClassifierUpdateFieldNumber = 10;
    /// <summary>
    /// Result of the triggered classifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.RecognitionClassifierUpdate ClassifierUpdate {
      get { return eventCase_ == EventOneofCase.ClassifierUpdate ? (global::Speechkit.Stt.V3.RecognitionClassifierUpdate) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.ClassifierUpdate;
      }
    }

    /// <summary>Field number for the "speaker_analysis" field.</summary>
    public const int SpeakerAnalysisFieldNumber = 11;
    /// <summary>
    /// Speech statistics for every speaker
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.SpeakerAnalysis SpeakerAnalysis {
      get { return eventCase_ == EventOneofCase.SpeakerAnalysis ? (global::Speechkit.Stt.V3.SpeakerAnalysis) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.SpeakerAnalysis;
      }
    }

    /// <summary>Field number for the "conversation_analysis" field.</summary>
    public const int ConversationAnalysisFieldNumber = 12;
    /// <summary>
    /// Conversation statistics
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Speechkit.Stt.V3.ConversationAnalysis ConversationAnalysis {
      get { return eventCase_ == EventOneofCase.ConversationAnalysis ? (global::Speechkit.Stt.V3.ConversationAnalysis) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.ConversationAnalysis;
      }
    }

    /// <summary>Field number for the "channel_tag" field.</summary>
    public const int ChannelTagFieldNumber = 9;
    private string channelTag_ = "";
    /// <summary>
    /// Tag for distinguish audio channels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChannelTag {
      get { return channelTag_; }
      set {
        channelTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "Event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      Partial = 4,
      Final = 5,
      EouUpdate = 6,
      FinalRefinement = 7,
      StatusCode = 8,
      ClassifierUpdate = 10,
      SpeakerAnalysis = 11,
      ConversationAnalysis = 12,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SessionUuid, other.SessionUuid)) return false;
      if (!object.Equals(AudioCursors, other.AudioCursors)) return false;
      if (ResponseWallTimeMs != other.ResponseWallTimeMs) return false;
      if (!object.Equals(Partial, other.Partial)) return false;
      if (!object.Equals(Final, other.Final)) return false;
      if (!object.Equals(EouUpdate, other.EouUpdate)) return false;
      if (!object.Equals(FinalRefinement, other.FinalRefinement)) return false;
      if (!object.Equals(StatusCode, other.StatusCode)) return false;
      if (!object.Equals(ClassifierUpdate, other.ClassifierUpdate)) return false;
      if (!object.Equals(SpeakerAnalysis, other.SpeakerAnalysis)) return false;
      if (!object.Equals(ConversationAnalysis, other.ConversationAnalysis)) return false;
      if (ChannelTag != other.ChannelTag) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sessionUuid_ != null) hash ^= SessionUuid.GetHashCode();
      if (audioCursors_ != null) hash ^= AudioCursors.GetHashCode();
      if (ResponseWallTimeMs != 0L) hash ^= ResponseWallTimeMs.GetHashCode();
      if (eventCase_ == EventOneofCase.Partial) hash ^= Partial.GetHashCode();
      if (eventCase_ == EventOneofCase.Final) hash ^= Final.GetHashCode();
      if (eventCase_ == EventOneofCase.EouUpdate) hash ^= EouUpdate.GetHashCode();
      if (eventCase_ == EventOneofCase.FinalRefinement) hash ^= FinalRefinement.GetHashCode();
      if (eventCase_ == EventOneofCase.StatusCode) hash ^= StatusCode.GetHashCode();
      if (eventCase_ == EventOneofCase.ClassifierUpdate) hash ^= ClassifierUpdate.GetHashCode();
      if (eventCase_ == EventOneofCase.SpeakerAnalysis) hash ^= SpeakerAnalysis.GetHashCode();
      if (eventCase_ == EventOneofCase.ConversationAnalysis) hash ^= ConversationAnalysis.GetHashCode();
      if (ChannelTag.Length != 0) hash ^= ChannelTag.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sessionUuid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SessionUuid);
      }
      if (audioCursors_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AudioCursors);
      }
      if (ResponseWallTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ResponseWallTimeMs);
      }
      if (eventCase_ == EventOneofCase.Partial) {
        output.WriteRawTag(34);
        output.WriteMessage(Partial);
      }
      if (eventCase_ == EventOneofCase.Final) {
        output.WriteRawTag(42);
        output.WriteMessage(Final);
      }
      if (eventCase_ == EventOneofCase.EouUpdate) {
        output.WriteRawTag(50);
        output.WriteMessage(EouUpdate);
      }
      if (eventCase_ == EventOneofCase.FinalRefinement) {
        output.WriteRawTag(58);
        output.WriteMessage(FinalRefinement);
      }
      if (eventCase_ == EventOneofCase.StatusCode) {
        output.WriteRawTag(66);
        output.WriteMessage(StatusCode);
      }
      if (ChannelTag.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ChannelTag);
      }
      if (eventCase_ == EventOneofCase.ClassifierUpdate) {
        output.WriteRawTag(82);
        output.WriteMessage(ClassifierUpdate);
      }
      if (eventCase_ == EventOneofCase.SpeakerAnalysis) {
        output.WriteRawTag(90);
        output.WriteMessage(SpeakerAnalysis);
      }
      if (eventCase_ == EventOneofCase.ConversationAnalysis) {
        output.WriteRawTag(98);
        output.WriteMessage(ConversationAnalysis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sessionUuid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SessionUuid);
      }
      if (audioCursors_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AudioCursors);
      }
      if (ResponseWallTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ResponseWallTimeMs);
      }
      if (eventCase_ == EventOneofCase.Partial) {
        output.WriteRawTag(34);
        output.WriteMessage(Partial);
      }
      if (eventCase_ == EventOneofCase.Final) {
        output.WriteRawTag(42);
        output.WriteMessage(Final);
      }
      if (eventCase_ == EventOneofCase.EouUpdate) {
        output.WriteRawTag(50);
        output.WriteMessage(EouUpdate);
      }
      if (eventCase_ == EventOneofCase.FinalRefinement) {
        output.WriteRawTag(58);
        output.WriteMessage(FinalRefinement);
      }
      if (eventCase_ == EventOneofCase.StatusCode) {
        output.WriteRawTag(66);
        output.WriteMessage(StatusCode);
      }
      if (ChannelTag.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ChannelTag);
      }
      if (eventCase_ == EventOneofCase.ClassifierUpdate) {
        output.WriteRawTag(82);
        output.WriteMessage(ClassifierUpdate);
      }
      if (eventCase_ == EventOneofCase.SpeakerAnalysis) {
        output.WriteRawTag(90);
        output.WriteMessage(SpeakerAnalysis);
      }
      if (eventCase_ == EventOneofCase.ConversationAnalysis) {
        output.WriteRawTag(98);
        output.WriteMessage(ConversationAnalysis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sessionUuid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionUuid);
      }
      if (audioCursors_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioCursors);
      }
      if (ResponseWallTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ResponseWallTimeMs);
      }
      if (eventCase_ == EventOneofCase.Partial) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Partial);
      }
      if (eventCase_ == EventOneofCase.Final) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Final);
      }
      if (eventCase_ == EventOneofCase.EouUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EouUpdate);
      }
      if (eventCase_ == EventOneofCase.FinalRefinement) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinalRefinement);
      }
      if (eventCase_ == EventOneofCase.StatusCode) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
      }
      if (eventCase_ == EventOneofCase.ClassifierUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassifierUpdate);
      }
      if (eventCase_ == EventOneofCase.SpeakerAnalysis) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpeakerAnalysis);
      }
      if (eventCase_ == EventOneofCase.ConversationAnalysis) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationAnalysis);
      }
      if (ChannelTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamingResponse other) {
      if (other == null) {
        return;
      }
      if (other.sessionUuid_ != null) {
        if (sessionUuid_ == null) {
          SessionUuid = new global::Speechkit.Stt.V3.SessionUuid();
        }
        SessionUuid.MergeFrom(other.SessionUuid);
      }
      if (other.audioCursors_ != null) {
        if (audioCursors_ == null) {
          AudioCursors = new global::Speechkit.Stt.V3.AudioCursors();
        }
        AudioCursors.MergeFrom(other.AudioCursors);
      }
      if (other.ResponseWallTimeMs != 0L) {
        ResponseWallTimeMs = other.ResponseWallTimeMs;
      }
      if (other.ChannelTag.Length != 0) {
        ChannelTag = other.ChannelTag;
      }
      switch (other.EventCase) {
        case EventOneofCase.Partial:
          if (Partial == null) {
            Partial = new global::Speechkit.Stt.V3.AlternativeUpdate();
          }
          Partial.MergeFrom(other.Partial);
          break;
        case EventOneofCase.Final:
          if (Final == null) {
            Final = new global::Speechkit.Stt.V3.AlternativeUpdate();
          }
          Final.MergeFrom(other.Final);
          break;
        case EventOneofCase.EouUpdate:
          if (EouUpdate == null) {
            EouUpdate = new global::Speechkit.Stt.V3.EouUpdate();
          }
          EouUpdate.MergeFrom(other.EouUpdate);
          break;
        case EventOneofCase.FinalRefinement:
          if (FinalRefinement == null) {
            FinalRefinement = new global::Speechkit.Stt.V3.FinalRefinement();
          }
          FinalRefinement.MergeFrom(other.FinalRefinement);
          break;
        case EventOneofCase.StatusCode:
          if (StatusCode == null) {
            StatusCode = new global::Speechkit.Stt.V3.StatusCode();
          }
          StatusCode.MergeFrom(other.StatusCode);
          break;
        case EventOneofCase.ClassifierUpdate:
          if (ClassifierUpdate == null) {
            ClassifierUpdate = new global::Speechkit.Stt.V3.RecognitionClassifierUpdate();
          }
          ClassifierUpdate.MergeFrom(other.ClassifierUpdate);
          break;
        case EventOneofCase.SpeakerAnalysis:
          if (SpeakerAnalysis == null) {
            SpeakerAnalysis = new global::Speechkit.Stt.V3.SpeakerAnalysis();
          }
          SpeakerAnalysis.MergeFrom(other.SpeakerAnalysis);
          break;
        case EventOneofCase.ConversationAnalysis:
          if (ConversationAnalysis == null) {
            ConversationAnalysis = new global::Speechkit.Stt.V3.ConversationAnalysis();
          }
          ConversationAnalysis.MergeFrom(other.ConversationAnalysis);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sessionUuid_ == null) {
              SessionUuid = new global::Speechkit.Stt.V3.SessionUuid();
            }
            input.ReadMessage(SessionUuid);
            break;
          }
          case 18: {
            if (audioCursors_ == null) {
              AudioCursors = new global::Speechkit.Stt.V3.AudioCursors();
            }
            input.ReadMessage(AudioCursors);
            break;
          }
          case 24: {
            ResponseWallTimeMs = input.ReadInt64();
            break;
          }
          case 34: {
            global::Speechkit.Stt.V3.AlternativeUpdate subBuilder = new global::Speechkit.Stt.V3.AlternativeUpdate();
            if (eventCase_ == EventOneofCase.Partial) {
              subBuilder.MergeFrom(Partial);
            }
            input.ReadMessage(subBuilder);
            Partial = subBuilder;
            break;
          }
          case 42: {
            global::Speechkit.Stt.V3.AlternativeUpdate subBuilder = new global::Speechkit.Stt.V3.AlternativeUpdate();
            if (eventCase_ == EventOneofCase.Final) {
              subBuilder.MergeFrom(Final);
            }
            input.ReadMessage(subBuilder);
            Final = subBuilder;
            break;
          }
          case 50: {
            global::Speechkit.Stt.V3.EouUpdate subBuilder = new global::Speechkit.Stt.V3.EouUpdate();
            if (eventCase_ == EventOneofCase.EouUpdate) {
              subBuilder.MergeFrom(EouUpdate);
            }
            input.ReadMessage(subBuilder);
            EouUpdate = subBuilder;
            break;
          }
          case 58: {
            global::Speechkit.Stt.V3.FinalRefinement subBuilder = new global::Speechkit.Stt.V3.FinalRefinement();
            if (eventCase_ == EventOneofCase.FinalRefinement) {
              subBuilder.MergeFrom(FinalRefinement);
            }
            input.ReadMessage(subBuilder);
            FinalRefinement = subBuilder;
            break;
          }
          case 66: {
            global::Speechkit.Stt.V3.StatusCode subBuilder = new global::Speechkit.Stt.V3.StatusCode();
            if (eventCase_ == EventOneofCase.StatusCode) {
              subBuilder.MergeFrom(StatusCode);
            }
            input.ReadMessage(subBuilder);
            StatusCode = subBuilder;
            break;
          }
          case 74: {
            ChannelTag = input.ReadString();
            break;
          }
          case 82: {
            global::Speechkit.Stt.V3.RecognitionClassifierUpdate subBuilder = new global::Speechkit.Stt.V3.RecognitionClassifierUpdate();
            if (eventCase_ == EventOneofCase.ClassifierUpdate) {
              subBuilder.MergeFrom(ClassifierUpdate);
            }
            input.ReadMessage(subBuilder);
            ClassifierUpdate = subBuilder;
            break;
          }
          case 90: {
            global::Speechkit.Stt.V3.SpeakerAnalysis subBuilder = new global::Speechkit.Stt.V3.SpeakerAnalysis();
            if (eventCase_ == EventOneofCase.SpeakerAnalysis) {
              subBuilder.MergeFrom(SpeakerAnalysis);
            }
            input.ReadMessage(subBuilder);
            SpeakerAnalysis = subBuilder;
            break;
          }
          case 98: {
            global::Speechkit.Stt.V3.ConversationAnalysis subBuilder = new global::Speechkit.Stt.V3.ConversationAnalysis();
            if (eventCase_ == EventOneofCase.ConversationAnalysis) {
              subBuilder.MergeFrom(ConversationAnalysis);
            }
            input.ReadMessage(subBuilder);
            ConversationAnalysis = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sessionUuid_ == null) {
              SessionUuid = new global::Speechkit.Stt.V3.SessionUuid();
            }
            input.ReadMessage(SessionUuid);
            break;
          }
          case 18: {
            if (audioCursors_ == null) {
              AudioCursors = new global::Speechkit.Stt.V3.AudioCursors();
            }
            input.ReadMessage(AudioCursors);
            break;
          }
          case 24: {
            ResponseWallTimeMs = input.ReadInt64();
            break;
          }
          case 34: {
            global::Speechkit.Stt.V3.AlternativeUpdate subBuilder = new global::Speechkit.Stt.V3.AlternativeUpdate();
            if (eventCase_ == EventOneofCase.Partial) {
              subBuilder.MergeFrom(Partial);
            }
            input.ReadMessage(subBuilder);
            Partial = subBuilder;
            break;
          }
          case 42: {
            global::Speechkit.Stt.V3.AlternativeUpdate subBuilder = new global::Speechkit.Stt.V3.AlternativeUpdate();
            if (eventCase_ == EventOneofCase.Final) {
              subBuilder.MergeFrom(Final);
            }
            input.ReadMessage(subBuilder);
            Final = subBuilder;
            break;
          }
          case 50: {
            global::Speechkit.Stt.V3.EouUpdate subBuilder = new global::Speechkit.Stt.V3.EouUpdate();
            if (eventCase_ == EventOneofCase.EouUpdate) {
              subBuilder.MergeFrom(EouUpdate);
            }
            input.ReadMessage(subBuilder);
            EouUpdate = subBuilder;
            break;
          }
          case 58: {
            global::Speechkit.Stt.V3.FinalRefinement subBuilder = new global::Speechkit.Stt.V3.FinalRefinement();
            if (eventCase_ == EventOneofCase.FinalRefinement) {
              subBuilder.MergeFrom(FinalRefinement);
            }
            input.ReadMessage(subBuilder);
            FinalRefinement = subBuilder;
            break;
          }
          case 66: {
            global::Speechkit.Stt.V3.StatusCode subBuilder = new global::Speechkit.Stt.V3.StatusCode();
            if (eventCase_ == EventOneofCase.StatusCode) {
              subBuilder.MergeFrom(StatusCode);
            }
            input.ReadMessage(subBuilder);
            StatusCode = subBuilder;
            break;
          }
          case 74: {
            ChannelTag = input.ReadString();
            break;
          }
          case 82: {
            global::Speechkit.Stt.V3.RecognitionClassifierUpdate subBuilder = new global::Speechkit.Stt.V3.RecognitionClassifierUpdate();
            if (eventCase_ == EventOneofCase.ClassifierUpdate) {
              subBuilder.MergeFrom(ClassifierUpdate);
            }
            input.ReadMessage(subBuilder);
            ClassifierUpdate = subBuilder;
            break;
          }
          case 90: {
            global::Speechkit.Stt.V3.SpeakerAnalysis subBuilder = new global::Speechkit.Stt.V3.SpeakerAnalysis();
            if (eventCase_ == EventOneofCase.SpeakerAnalysis) {
              subBuilder.MergeFrom(SpeakerAnalysis);
            }
            input.ReadMessage(subBuilder);
            SpeakerAnalysis = subBuilder;
            break;
          }
          case 98: {
            global::Speechkit.Stt.V3.ConversationAnalysis subBuilder = new global::Speechkit.Stt.V3.ConversationAnalysis();
            if (eventCase_ == EventOneofCase.ConversationAnalysis) {
              subBuilder.MergeFrom(ConversationAnalysis);
            }
            input.ReadMessage(subBuilder);
            ConversationAnalysis = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
